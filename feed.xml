<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mariano Gappa&apos;s Blog</title>
    <description>Blog about Software Engineering and Music Production.</description>
    <link>https://marianogappa.github.io/</link>
    <atom:link href="https://marianogappa.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Real life indirection is the root of all evil, and AI agents can fix it!</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;This blogpost introduces the idea that there‚Äôs a concept called ‚Äúindirection in the real World‚Äù, derived from a programming concept, which is good in principle, but also hides behind all evil. It then explores how the latest developments in AI might present an opportunity to challenge some of the adverse effects of it.&lt;/p&gt;

&lt;h2 id=&quot;what-was-indirection&quot;&gt;What was indirection?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Indirection&quot;&gt;Indirection&lt;/a&gt;, for the uninitiated, is a computer programming principle.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Pointer_(computer_programming)#Formal_description&quot;&gt;pointer&lt;/a&gt; to a value indirectly references a value.&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_(computing)&quot;&gt;interface&lt;/a&gt; indirects the implementation details of some function from its consumers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/High-level_programming_language&quot;&gt;Higher-level languages&lt;/a&gt; like Python or Swift indirect memory management, nested call stacks and other low-level details.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Indirection is not inherently bad and it‚Äôs necessary to implement good &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstraction_principle_(computer_programming)&quot;&gt;abstractions&lt;/a&gt;: we don‚Äôt want to go back to &lt;a href=&quot;https://en.wikipedia.org/wiki/Assembly_language&quot;&gt;Assembly&lt;/a&gt; üò±!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-assembly.png&quot; alt=&quot;Assembly&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The popular negative connotation around indirection comes from the difficulty of reading through code when there are too many nested ‚Äújump to definition‚Äù hops (indirection hops!) to get to some relevant section, as opposed to a linear sequence of actions.&lt;/p&gt;

&lt;p&gt;Often, one can draw a parallel between a codebase and a tricky book. But when there‚Äôs too much indirection, it feels more like reading an over-engineered &lt;a href=&quot;https://en.wikipedia.org/wiki/Choose_Your_Own_Adventure&quot;&gt;Choose your own adventure&lt;/a&gt; gamebook, where you have to switch pages every 5 words!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-choose-your-own-adventure.jpeg&quot; alt=&quot;Choose your own adventure&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-does-indirection-in-the-real-world-look-like&quot;&gt;What does ‚ÄúIndirection in the real World‚Äù look like?&lt;/h2&gt;

&lt;p&gt;For the most part, we no longer do anything end-to-end by ourselves.&lt;/p&gt;

&lt;p&gt;There was a time when humans didn‚Äôt &lt;em&gt;indirectly&lt;/em&gt; depend on other humans for:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Food&lt;/strong&gt;: we don‚Äôt plant it, grow it, harvest it, package it. We don‚Äôt even know &lt;em&gt;how to&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shelter&lt;/strong&gt;: perhaps thousands of people involved in building a house, keeping it warm, lit, having a sewage system.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Safety&lt;/strong&gt;: an emergency service a call away that deploys police, firefighters or ambulances to your location in minutes!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-cavemen.png&quot; alt=&quot;Cavemen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We live in a much better World now, thanks to this gargantuan spider web of indirection we‚Äôve built. Indirection is good!&lt;/p&gt;

&lt;p&gt;But sometimes it‚Äôs bad. Have you ever heard of these?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;‚Äúresponsibility can never be delegated‚Äù&lt;/li&gt;
  &lt;li&gt;‚Äúif you want something done right, do it yourself‚Äù&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are common proverbs for ‚Äúindirection is bad‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;where-did-indirection-go-so-wrong&quot;&gt;Where did indirection go so wrong?&lt;/h2&gt;

&lt;p&gt;If you make a list of the top things that are wrong with the World, you can find indirection creeping in:&lt;/p&gt;

&lt;h3 id=&quot;war&quot;&gt;War&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The American people wouldn‚Äôt on their own decide to invade Irak&lt;/li&gt;
  &lt;li&gt;The Russian people wouldn‚Äôt on their own decide to invade Ukraine&lt;/li&gt;
  &lt;li&gt;‚Ä¶and the same goes for all others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;War is only possible due to indirection.&lt;/p&gt;

&lt;p&gt;The governments &amp;amp; powerful elites:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Make the decisions leveraging the indirection in &lt;strong&gt;representative democracy&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Persuade people that it‚Äôs the right decision leveraging the indirection in &lt;strong&gt;the media‚Äôs depictions of news &amp;amp; facts&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;extreme-social-inequality&quot;&gt;Extreme social inequality&lt;/h3&gt;
&lt;p&gt;Extreme inequality is actually a fragile state and it leads to &lt;a href=&quot;https://en.wikipedia.org/wiki/French_Revolution#Causes&quot;&gt;guillotines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To maintain order, diverse mechanisms of indirection are applied.&lt;/p&gt;

&lt;p&gt;A very simple one is &lt;strong&gt;distance&lt;/strong&gt;: Michael Moore, despite whatever feelings you might have about him, puts it very eloquently &lt;a href=&quot;https://youtu.be/XQ_agxK6fLs?t=327&quot;&gt;in this excerpt&lt;/a&gt;, when discussing how all schools in Finland are the same, so the rich parents have to make sure the public schools are great, and given that rich kids go to school with the rest and become friends, they have to think twice before they screw them over as wealthy adults.&lt;/p&gt;

&lt;p&gt;Ever wondered why you can hardly ever see or speak to rich, powerful people? The ‚Äúthing‚Äù separating them from you is called indirection.&lt;/p&gt;

&lt;h3 id=&quot;obesity-epidemic&quot;&gt;Obesity epidemic&lt;/h3&gt;
&lt;p&gt;It‚Äôs great that we don‚Äôt have to plant, harvest, package and transport all our food by ourselves now. But those who do that for us have different priorities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;They add loads of preservatives and chemicals to the products so they last longer in the shelves, regardless of possible adverse effects.&lt;/li&gt;
  &lt;li&gt;They deliberately make unhealthy products incredibly tasty and market them to kids, then lie about the health effects, to make a profit.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-happy-meal.png&quot; alt=&quot;Happy Meal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can clearly see how the hugely beneficial effects of delegation are unfortunately subverted by leveraging the indirection when objectives are not aligned.&lt;/p&gt;

&lt;p&gt;Often, well-off people opt to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;shop products that closely &amp;amp; explicitly showcase the food origin &amp;amp; process&lt;/li&gt;
  &lt;li&gt;shop direct from local farmers&lt;/li&gt;
  &lt;li&gt;grow food themselves&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is this, effectively? ü§î Removing/minimising indirection!&lt;/p&gt;

&lt;h3 id=&quot;political-corruption&quot;&gt;Political corruption&lt;/h3&gt;
&lt;p&gt;There‚Äôs a legit point to representative democracy! It would be really hard to have a debate with your whole city on every little aspect of government (and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Landsgemeinde&quot;&gt;Landsgemeinde&lt;/a&gt; doesn‚Äôt count).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-landsgemeinde.png&quot; alt=&quot;Landsgemeinde&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But representative democracy introduces indirection, and it gets out of hand quickly.&lt;/p&gt;

&lt;p&gt;Your elected officials:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don‚Äôt know you&lt;/li&gt;
  &lt;li&gt;Largely don‚Äôt benefit from helping you&lt;/li&gt;
  &lt;li&gt;Often come from a different background or ethnicity, which comes with different values &amp;amp; culture&lt;/li&gt;
  &lt;li&gt;Their priorities are very different from yours!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An abyss of indirection separate you.&lt;/p&gt;

&lt;p&gt;All you get is a paper vote every few years, and you can protest on the street and argue online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Indirection is the real reason why politics don‚Äôt scale.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-have-we-done-so-far-to-mitigate-these-evils&quot;&gt;What have we done so far to mitigate these evils?&lt;/h2&gt;

&lt;p&gt;The word &lt;strong&gt;‚Äútransparency‚Äù&lt;/strong&gt; comes up every time ü§î. Surprised?&lt;/p&gt;

&lt;p&gt;It‚Äôs not surprising:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The problem: indirection clouding the evil, making it opaque.&lt;/li&gt;
  &lt;li&gt;The solution: remove the indirection, revealing the evil.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples are everywhere:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;em&gt;indirect&lt;/em&gt; links between tobacco &amp;amp; foods high in added sugar and adverse health effects like &lt;a href=&quot;https://nida.nih.gov/publications/drugfacts/cigarettes-other-tobacco-products&quot;&gt;lung cancer&lt;/a&gt;, &lt;a href=&quot;https://www.nhs.uk/live-well/eat-well/food-types/how-does-sugar-in-our-diet-affect-our-health/&quot;&gt;obesity &amp;amp; diabetes&lt;/a&gt; have been widely established and agreed upon after decades of systematic attempts to deny and hide them (I say ‚Äúindirect‚Äù because the effects take years to materialise). What do governments decide to do? Put health warnings in the packaging, thus removing the indirection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tobacco-warning.jpg&quot; alt=&quot;Tobacco Warning&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Panama_Papers&quot;&gt;The Panama Papers&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Paradise_Papers&quot;&gt;The Paradise Papers&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://en.wikipedia.org/wiki/Swiss_Leaks&quot;&gt;The Swiss Leaks&lt;/a&gt; are just a few examples of the long list of whistleblowing efforts to remove the indirection mechanisms allowing the filthy rich from evading taxes and hiding their wealth.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Vegans argue that animal farming is evil. If you agree, this is another good example. In order to increase efficiency, producers need to resort to and &lt;strong&gt;hide&lt;/strong&gt; farms like this one üò±:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-chicken-farm.png&quot; alt=&quot;Chicken Farm&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;brainstorming-can-we-do-better&quot;&gt;Brainstorming: can we do better?&lt;/h2&gt;

&lt;p&gt;We can steal some ideas from great thinkers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-the-open-source-everything-manifesto.png&quot; alt=&quot;The Open Source Everything Manifesto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_David_Steele&quot;&gt;Robert David Steele&lt;/a&gt;, although later quite a controversial figure, was an American CIA officer who wrote a book called &lt;a href=&quot;https://www.goodreads.com/en/book/show/12998524-the-open-source-everything-manifesto&quot;&gt;The Open-Source Everything Manifesto&lt;/a&gt;. In it, he advocates for the transition from top-down secret command and control to a world of bottom-up, consensual, collective decision-making as a means to solve the major crises facing our world today.&lt;/p&gt;

&lt;p&gt;I read this book in 2014, and this idea resonated with me, because I interpreted it as ‚Äúremoving indirection from information-based decision-making‚Äù, and letting everyone collaboratively ‚Äúaudit‚Äù the World.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-yuval-harari.png&quot; alt=&quot;Yuval Harari&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Very recently, historian &lt;a href=&quot;https://en.wikipedia.org/wiki/Yuval_Noah_Harari&quot;&gt;Yuval Harari&lt;/a&gt; echoed a thought from a &lt;a href=&quot;https://archive.org/details/yuval-noah-harari-at-the-world-economic-forum-in-davos-2020-the-rise-of-digital-&quot;&gt;2020 talk he made at Davos&lt;/a&gt; in a short &lt;a href=&quot;https://www.youtube.com/watch?v=JV9tzdYT5FU&amp;amp;pp=ygUVeXV2YWwgZGljdGF0b3JzaGlwIGFp&quot;&gt;interview with Piers Morgan&lt;/a&gt;, along the lines of: ‚ÄúAlongside inequality, the other major danger we face is the rise of digital dictatorships, that will monitor everyone all the time‚Äù.&lt;/p&gt;

&lt;p&gt;This idea of having a self-replicating &lt;a href=&quot;https://en.wikipedia.org/wiki/Agent_Smith&quot;&gt;Agent Smith&lt;/a&gt; keeping every human under control resonated with me as well: if we can use these agents for mind control, can we use them to keep them free from these evils too?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-cypherpunk.png&quot; alt=&quot;Cypherpunk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Cypherpunk&quot;&gt;Cypherpunk&lt;/a&gt; movement was a loosely coupled group of computer scientist activists originated in San Francisco in the mid 80s who advocated the use of cryptography and privacy-enhancing technologies to challenge state surveillance and censorship and promote social and political change. Bitcoin and cryptocurrencies came from this movement, or so &lt;a href=&quot;https://en.wikipedia.org/wiki/Arvind_Narayanan&quot;&gt;Arvind Narayanan&lt;/a&gt; taught me in his &lt;a href=&quot;https://www.coursera.org/learn/cryptocurrency&quot;&gt;Bitcoin and Cryptocurrency Technologies&lt;/a&gt; MOOC.&lt;/p&gt;

&lt;p&gt;What a fantastic dream (for a software engineer at least), that a few nerds can team up and have a realistic shot at fixing the World üòç!&lt;/p&gt;

&lt;p&gt;But we need bolder tools ü§î.&lt;/p&gt;

&lt;h2 id=&quot;how-about-leveraging-ai-agents&quot;&gt;How about leveraging &lt;a href=&quot;https://en.wikipedia.org/wiki/Intelligent_agent&quot;&gt;AI agents&lt;/a&gt;?&lt;/h2&gt;

&lt;p&gt;Every day I wake up to a brand new &lt;a href=&quot;https://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt; front page looking for these new activists, these AI-Powered Transparency Warriors.&lt;/p&gt;

&lt;p&gt;How about having a swarm of anonymous AI agents hidden in all corners of the Internet, auditing the World, looking for wrongs to right?&lt;/p&gt;

&lt;p&gt;Sounding much like a &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Terminator&quot;&gt;Terminator&lt;/a&gt;-style dystopia?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-terminator-dystopia.png&quot; alt=&quot;Terminator Dystopia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Only that these agents could be open source and community-maintained, and their collaborators could remain anonymous if necessary, much like &lt;a href=&quot;https://en.wikipedia.org/wiki/Satoshi_Nakamoto&quot;&gt;Satoshi Nakamoto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Not quite viable today, but I‚Äôd argue it‚Äôs &lt;strong&gt;unavoidable in the long term anyway&lt;/strong&gt;, in one form or another.&lt;/p&gt;

&lt;p&gt;Anybody can sue, publicly denounce or file a complaint against anyone else if they have a good case, so why can‚Äôt computers do it? They‚Äôll be better than us at it ü§∑‚Äç‚ôÇÔ∏è.&lt;/p&gt;

&lt;p&gt;Since it‚Äôs well-studied that &lt;a href=&quot;https://www.imf.org/EXTERNAL/PUBS/FT/ISSUES6/INDEX.HTM&quot;&gt;corruption affects a country‚Äôs economic output&lt;/a&gt; and thus, long-term, everyone (unintuitively including the rich) benefits when there‚Äôs less corruption, wouldn‚Äôt it be in the best interest of governments to deploy these AI auditors?&lt;/p&gt;

&lt;h2 id=&quot;cancel-culture-put-to-good-use&quot;&gt;Cancel culture put to good use&lt;/h2&gt;

&lt;p&gt;The recent &lt;a href=&quot;https://en.wikipedia.org/wiki/Cancel_culture&quot;&gt;Cancel Culture&lt;/a&gt; phenomenon has been widely criticised and with good reasons, but it did bring something new to the table that I hadn‚Äôt seen before: &lt;strong&gt;the rich &amp;amp; powerful held accountable and brought down&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Call it &lt;em&gt;vigilante justice&lt;/em&gt;, I don‚Äôt care: even if there are false positives, the idea that no army of lawyers nor unlimited bribery resources can save you if you do bad deeds is a deterrent &lt;strong&gt;we all wish existed&lt;/strong&gt;, no?&lt;/p&gt;

&lt;p&gt;This dream is within reach now. I dream of AI Agents keeping the &lt;a href=&quot;https://en.wikipedia.org/wiki/Animal_Farm#Pigs&quot;&gt;Animal Farm pigs&lt;/a&gt; honest.&lt;/p&gt;

&lt;p&gt;How about the Supreme Court judges? The billionaire class? The people who wield tremendous power over others should be held at a higher standard, and if they don‚Äôt like it, then they shouldn‚Äôt hold it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ai-thomas-clarence.png&quot; alt=&quot;Thomas Clarence&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôd argue that an AI Agent monitoring, discovering &amp;amp; exposing &lt;a href=&quot;https://en.wikipedia.org/wiki/Clarence_Thomas&quot;&gt;Clarence Thomas&lt;/a&gt;‚Äôs &lt;a href=&quot;https://en.wikipedia.org/wiki/Clarence_Thomas#Nondisclosure_of_gifts,_real_estate_sale,_and_wife&apos;s_income&quot;&gt;gifts&lt;/a&gt;, assuming they are bribes, could potentially be just as life-saving as &lt;a href=&quot;https://www.youtube.com/watch?v=bUhFfunT2ds&quot;&gt;FSD&lt;/a&gt;, both at scale.&lt;/p&gt;

&lt;p&gt;Of course, like all else, how do we ensure it doesn‚Äôt target a specific agenda?&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The future I imagine in this post sounds very much like an unrealistic sci-fi musing. But is it, though?&lt;/p&gt;

&lt;p&gt;We can at least all agree that AI will have a growing presence in our daily lives, both at the individual and the societal level.&lt;/p&gt;

&lt;p&gt;I believe that some of our mightiest inventions have served the purpose of enhancing our ability to collaborate as a civilization:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Towns, city-states &amp;amp; kingdoms&lt;/strong&gt;, uniting us under a common flag.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Religion&lt;/strong&gt;, uniting us across regions, under the same beliefs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Capitalism, globalisation &amp;amp; telecommunications&lt;/strong&gt;, bringing us closer together and making us so dependent on each other that wars became bad business.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Internet&lt;/strong&gt;, making all our collective knowledge available to everyone instantly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout these stages, the ‚Äúdistance‚Äù to one another has steadily decreased, but we‚Äôre not quite there yet. I argue that the elusive enemy we must defeat is called indirection, and AI agents can be the next stage in our human journey.&lt;/p&gt;

&lt;p&gt;If I had to guess, I‚Äôd say the pioneering applications will more likely come from the private sector or from clandestinity. But I don‚Äôt know when, or what the form will be. I‚Äôm sure it‚Äôs coming, though. Soon.&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Jul 2023 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2023/07/28/real-life-indirection-is-the-root-of-all-evil-and-ai-agents-can-fix-it/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2023/07/28/real-life-indirection-is-the-root-of-all-evil-and-ai-agents-can-fix-it/</guid>
      </item>
    
      <item>
        <title>Building Crypto Predictions Tracker: architecture and challenges</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;During the past year I‚Äôve gotten exposure to the cryptocurrency scene from an investment perspective. A key frustrating aspect of it is that there‚Äôs no reliable source of investment advice. I describe this problem in detail on my previous blogpost: &lt;a href=&quot;https://marianogappa.github.io/software/2022/08/25/cryptocurrency-influencers-are-preying-on-millennials-who-found-salvation-in-crypto/&quot;&gt;Cryptocurrency influencers are preying on millennials who found salvation in crypto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I‚Äôve been working on a Go-based project to automatically track cryptocurrency predictions made on social networks like &lt;a href=&quot;https://twitter.com/CryptoKaleo/status/1558313838877057025&quot;&gt;this one&lt;/a&gt; for the last 6 months, as a tool for accountability and influencer reputation. I think the resulting system ended up being pretty neat and it might interest you if you‚Äôre a backend engineer. In this blogpost, I‚Äôll define this system and describe its architecture.&lt;/p&gt;

&lt;p&gt;The backend system is available here: &lt;a href=&quot;https://github.com/marianogappa/crypto-predictions&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A frontend to this project is this Twitter account: &lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A key component of building this project was to consume cryptocurrency market data provided by exchanges. I‚Äôve open sourced a library that facilitates this task in a simple and efficient manner. The crypto-candles library is available &lt;a href=&quot;https://github.com/marianogappa/crypto-candles&quot;&gt;on Github&lt;/a&gt; and its construction and features are described on my blogpost: &lt;a href=&quot;https://marianogappa.github.io/software/2022/07/27/10-gotchas-for-building-a-universal-crypto-candlestick-iterator-in-go/&quot;&gt;10 Gotchas for building a universal crypto candlestick iterator in Go&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;A fundamental problem of available cryptocurrency-related investment advice on the Internet is that there is no track-record anywhere. Consider other businesses:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Before making a hotel or restaurant booking, we can check their rating online on our phones.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Before making a decision on a rental flat or buying a house, we can compare neighbourhood prices and do inspections.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Before choosing an investment fund, we can check &lt;a href=&quot;https://am.jpmorgan.com/us/en/asset-management/adv/tools/portfolio-tools/investment-comparison/&quot;&gt;comparison studies&lt;/a&gt; as well as the historical ROI of the chosen fund itself.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now consider examples of advice given by cryptocurrency influencers, like this one:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tweet-example-0.png&quot; alt=&quot;Example Tweet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôm hoping most of you reading this right now will be thinking: ‚Äúwhy would anyone in their right mind follow the investment advice of some dude on the Internet?‚Äù. I think so too. However, some of these influencers have more than a million followers! I think it‚Äôs fair to assume that advice is being followed galore. For a more exhaustive read of this problem, please read my blogpost: &lt;a href=&quot;https://marianogappa.github.io/software/2022/08/25/cryptocurrency-influencers-are-preying-on-millennials-who-found-salvation-in-crypto/&quot;&gt;Cryptocurrency influencers are preying on millennials who found salvation in crypto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I don‚Äôt think all advice is malintentioned, and even if it was, I don‚Äôt think it should be banned or made illegal, the same way that I don‚Äôt think smoking, drinking and drugs should be illegal either. However, some form of warning should be available for them, the same way that there are warnings on cigarette packs and ratings on restaurants and hotels. Then, influencers would have a track-record that keeps them honest, and individuals can make informed decisions. But is that possible?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tobacco-warning.jpg&quot; alt=&quot;Social Network Posts&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;key-insights-on-feasibility&quot;&gt;Key Insights on feasibility&lt;/h2&gt;

&lt;p&gt;Note how social network posts are particularly well-suited for keeping a track record:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto_social_post.png&quot; alt=&quot;Social Network Posts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;They have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;a date&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;an owner&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mostly reasonably un-editable content&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provided that the content is specific enough, as in the above example, then one could manually go to the exchange‚Äôs website every now and then and check the market pair‚Äôs last value against the prediction. In most cases, it‚Äôs important that the prediction has some deadline: otherwise either we could be checking forever, and besides there‚Äôs little value on a prediction that can only become true eventually, but never times out and becomes false.&lt;/p&gt;

&lt;p&gt;If this can be done manually, can it be automated?&lt;/p&gt;

&lt;p&gt;Yes! All exchanges (mostly) provide free APIs to consume current and historical market pair data. Social networks also &lt;del&gt;have free APIs to consume public post metadata&lt;/del&gt; (thank you &lt;a href=&quot;https://techcrunch.com/2023/02/01/twitter-to-end-free-access-to-its-api/&quot;&gt;Twitter&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://techcrunch.com/2023/04/18/reddit-will-begin-charging-for-access-to-its-api/&quot;&gt;Reddit&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;automating-the-system&quot;&gt;Automating the system&lt;/h2&gt;

&lt;p&gt;At a high level, automating tracking for one prediction looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-system-diagram.png&quot; alt=&quot;Crypto Predictions System Diagram&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Manually input the prediction metadata (e.g. who predicts, which market pair, by when, prediction condition) as an object/struct in memory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Every minute or so, ask the exchange for the current last price of the market pair.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upon receiving the new price, check if the prediction condition was met.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If condition met, prediction became true!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If condition stays false until deadline, prediction became false!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-million-caveats&quot;&gt;A million caveats&lt;/h2&gt;

&lt;p&gt;While the above looks very simple, every bullet point is trickier than it looks, even before introducing architectural considerations.&lt;/p&gt;

&lt;p&gt;Here are some illustrative examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A prediction should ideally specify which exchange it is for. There is no one value for a given market pair, that is, the last price of Bitcoin against Tether can differ between the Binance exchange and the Coinbase exchange at the same timestamp, because the last price is defined by the order book, and different exchanges have different order books! This causes two problems: (1) this system must implement ALL exchange APIs, and (2) predictions that don‚Äôt specify exchange cannot really be tracked accurately, although in practice some assumptions are reasonable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Social networks don‚Äôt reveal the timezone of post authors, authors don‚Äôt specify which timezones they make their predictions for, and cryptocurrency influencers typically travel around a lot, so prediction deadlines are imprecise. The closer the deadline, the least precise is the tracking of the prediction.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In practice, &amp;gt;80% of predictions are surprisingly homogeneous and simple in structure, in the form: ‚ÄúCoin against Stablecoin will reach Value by Deadline‚Äù. But for some outliers, the discussed algorithm of a prediction being false until it becomes true or times out doesn‚Äôt work. For example, consider this one: ‚ÄúEthereum won‚Äôt reach 3000 until December‚Äù.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It would be very lucky if the system would always catch fresh predictions made just now, but in practice the system will input predictions made some time in the past, so old predictions have to ‚Äúcatch up to the present‚Äù by checking the evolution of price since the start of the prediction timestamp, to now. The API endpoints for historical prices and current prices are separate.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The last price for a market pair changes with every filled order. On an exchange with a very high volume of transactions, several hundreds of orders could be filled every second. Checking the condition for every order would be the most accurate way to evaluate the prediction, because in theory there could be a very short period of very high price volatility in which the prediction briefly becomes true, and we might miss this fact in an averaged bucket of orders. In practice, this would be unfeasible, especially if we‚Äôre planning to do it for more than a single prediction.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;architectural-building-blocks&quot;&gt;Architectural building blocks&lt;/h2&gt;

&lt;p&gt;At a minimum, these components are going to be required:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions -diagram-blogpost-1.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Database: each prediction contains some metadata (e.g. who, what, when) and some state (e.g. last recorded price and when, status of prediction). This data should survive restarts and evolve in atomic steps.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Market requester: predictions evolve upon evaluating market data, so the system needs a component that knows how to talk to all Exchange APIs.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Social Network requester: predictions are created upon consuming social network post metadata (e.g. who, what, when), so the system needs a component that can request post metadata from e.g. Twitter.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Back Office: a minimal frontend to &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; predictions, and to see what happens to them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cron: a process that will evolve active predictions at regular intervals, with the newest market data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we want the system to be useful to a larger population than just its creator, two extra components become relevant:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Frontend: some UI to display the information created, like a website. It could also be some report export function.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API: since now there are three components reading data (Cron, Back Office and Frontend), and potentially the Frontend could be consumed by untrusted clients, it becomes important to have a unified interface for managing access to that data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;architectural-challenges&quot;&gt;Architectural challenges&lt;/h2&gt;

&lt;h4 id=&quot;implementing-support-for-arbitrary-predictions&quot;&gt;Implementing support for arbitrary predictions&lt;/h4&gt;

&lt;p&gt;A prediction post can be as simple as ‚ÄúBitcoin will be worth 100K in 2022!‚Äù which can be normalized (with some assumptions) to: ‚ÄúBTC against USDT (Tether) in the Binance exchange (spot market as opposed to some other derivatives market) will be greater than or equal to $100,000 within the post‚Äôs timestamp and the first second of Jan 1st, 2023‚Äù. That prediction cannot become false before end of year.&lt;/p&gt;

&lt;p&gt;As it turns out, 80% or more of the predictions are as simple as that example. Considering the most popular cryptocurrency influencers, there are mostly only a few prediction patterns in total.&lt;/p&gt;

&lt;p&gt;Sometimes, an influencer will make their ‚Äúnext run predictions‚Äù like so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tweet-example-1.png&quot; alt=&quot;Example Tweet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we want to support that, we need to add boolean operator support over the initial implementation.&lt;/p&gt;

&lt;p&gt;It‚Äôs quite common to see a pattern of ‚ÄúIf a cryptocurrency falls below X, it will go all the way down to Y‚Äù. For example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tweet-example-2.png&quot; alt=&quot;Example Tweet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This prediction has two steps: a ‚Äúprerequisite‚Äù which ‚Äúenables‚Äù the prediction, and the prediction itself. If the ‚Äúprerequisite‚Äù is not met, then the prediction is not false but ‚Äúannulled‚Äù. Often, these predictions cannot be input because they lack specific deadlines.&lt;/p&gt;

&lt;p&gt;Finally, some predictions become true if a condition is true until a deadline, like this one:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto-predictions-tweet-example-3.png&quot; alt=&quot;Example Tweet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This prediction breaks the model in which a prediction is false unless it becomes true before some deadline.&lt;/p&gt;

&lt;p&gt;There are more edge cases, but they are less common, so I won‚Äôt mention them here. I‚Äôve implemented support for many of these patterns and others, and in my experience the problem is not at all the coding &amp;amp; testing involved: the real issue is the UI for inputting and for showing the status of predictions. Rather than providing so much flexibility, it works a lot better to offer a few pre-baked templates, and enable UI support for those.&lt;/p&gt;

&lt;h4 id=&quot;requesting-market-data&quot;&gt;Requesting market data&lt;/h4&gt;

&lt;p&gt;Predictions posted online tend to follow market trends, so the most popular cryptocurrencies get the most predictions, somewhat following the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;80/20 Pareto principle&lt;/a&gt;. This means that, if we have 100 predictions and we evolve them every minute, we‚Äôre gonna be making a lot of identical requests to the exchange‚Äôs APIs. This is not just very inefficient but also unlikely to last long, because as the number of predictions grow, very soon the exchange‚Äôs APIs will ban our IPs and ask us to enhance our calm.&lt;/p&gt;

&lt;p&gt;The simplest solution to this problem is to cache market responses. In theory, this makes perfect sense, since one wouldn‚Äôt expect historical market data to change. In practice, this is almost true, but one should be careful to consider some received data point ‚Äúfinal‚Äù, since very recent data might be ‚Äústill getting aggregated‚Äù, and exchanges do not clarify if a data point is final or not. A mitigation is to not consume very recent data points.&lt;/p&gt;

&lt;p&gt;Note that the caching component is very valuable, but in a very small window of time. It‚Äôs not common to need to request old data, because most predictions are about future deadlines. Thus, it‚Äôs not necessary to build a full-fledged solution for caching.&lt;/p&gt;

&lt;h4 id=&quot;storing-predictions-and-evolving-them&quot;&gt;Storing predictions and evolving them&lt;/h4&gt;

&lt;p&gt;Predictions are esentially state machines, and they have two parts: metadata (e.g. author, deadline, conditions), and state (e.g. last timestamp requested for each market pair, status of condition(s) that compose the prediction).&lt;/p&gt;

&lt;p&gt;Only the state part evolves over time. On each evolution step, one needs to request the latest data points for the involved market pairs, re-evaluate the prediction condition(s) and possibly change the status of it to ‚Äúcorrect‚Äù/‚Äùincorrect‚Äù.&lt;/p&gt;

&lt;p&gt;Further, out of the database of predictions, only a subset evolves: the active predictions. However, the state part of all active predictions must be updated every time. This write pattern suggests using some in-memory layer before reaching the durable store to alleviate disk pressure and latency, although then if someone kicks the power cable progress is lost.&lt;/p&gt;

&lt;p&gt;Of course, for a small project that is just starting up and where cost is a major concern, a batch update statement on a small Postgres instance is more than enough. In order to set up the project for growth, we can just hide the storage layer implementation details behind a simple interface.&lt;/p&gt;

&lt;h4 id=&quot;predictions-tend-to-have-a-common-deadline&quot;&gt;Predictions tend to have a common deadline&lt;/h4&gt;

&lt;p&gt;End of year, end of month, or whenever a big event will take place (e.g. whenever the &lt;a href=&quot;https://www.investopedia.com/terms/c/consumerpriceindex.asp&quot;&gt;CPI&lt;/a&gt; is going to be announced, whenever &lt;a href=&quot;https://www.investopedia.com/bitcoin-halving-4843769&quot;&gt;the halving&lt;/a&gt; happens) are very common instants for predictions. This is absolutely fine in terms of evolving the predictions, but if one plans to trigger some actions like sending out notifications, instant hotspots could be problematic.&lt;/p&gt;

&lt;p&gt;Possible mitigations are to buffer and aggregate notifications, or to cap the amount of notifications that can be sent in a given time period.&lt;/p&gt;

&lt;h2 id=&quot;takeaways-from-tracking-predictions-for-the-last-few-months&quot;&gt;Takeaways from tracking predictions for the last few months&lt;/h2&gt;

&lt;p&gt;A key criticism for this project is that it is pointless to track what influencers say, because no one in their right mind should take their advice when they make their investment decisions. If you share this point of view (like me!), wouldn‚Äôt it be useful to be able to answer how often predictions become correct?&lt;/p&gt;

&lt;h4 id=&quot;how-often-do-predictions-become-correct&quot;&gt;How often do predictions become correct?&lt;/h4&gt;

&lt;p&gt;Well, thanks to this project, I can answer that! Results have caveats (e.g. some influencers make more specific predictions than others, averaging results compares apples &amp;amp; oranges because some predictions are bolder than others), but they are definitely not meaningless. Insights will be vague, because the sample is less than a thousand predictions, and it simply hasn‚Äôt been that long since I started tracking them.&lt;/p&gt;

&lt;p&gt;Here are the takeaways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Predictions become correct reliably about 25% of the time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deadline matters: prediction correctness drops to 20% when deadline is 4 days or less in the future or more than a month, sweet spot being about two weeks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;80% of all predictions are made for a deadline earlier than or equal to a month in the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some influencers are definitely more reliable than others.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don‚Äôt want to be thought of as endorsing influencers and I also don‚Äôt want to talk without sufficient data, but I can say preliminarly that you should probably ignore specific predictions given by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rovercrc&lt;/li&gt;
  &lt;li&gt;trader1sz&lt;/li&gt;
  &lt;li&gt;profit8lue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you could listen to (but don‚Äôt delegate your financial decisions!!!) specific predictions given by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CryptoCapo_&lt;/li&gt;
  &lt;li&gt;IncomeSharks&lt;/li&gt;
  &lt;li&gt;CredibleCrypto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are plenty of others, but either they make vague predictions or don‚Äôt make enough to make statistically significant conclusions (in a 6 month timeframe).&lt;/p&gt;

&lt;h2 id=&quot;is-there-any-more-value-out-of-this-project&quot;&gt;Is there any more value out of this project?&lt;/h2&gt;

&lt;p&gt;Evidently, the current state of this project is of little relevance to people. Otherwise, the Twitter account would have more followers and my blogs about it would generate more buzz. Personally, I think anyone following a crypto influencer with the intention of following their advice can only benefit from an impartial, automated track-record for them, but this thought-process makes the assumption that human decisions always makes sense. This has been refuted, and it is really confusing to me.&lt;/p&gt;

&lt;p&gt;However, in order to take this project to production I had to build many components that could be used or adapted for other interesting uses.&lt;/p&gt;

&lt;h4 id=&quot;evaluating-paid-subscriptions-that-offer-cryptocurrency-signals&quot;&gt;Evaluating paid subscriptions that offer ‚Äúcryptocurrency signals‚Äù&lt;/h4&gt;

&lt;p&gt;Many individuals or anonymous companies offer a monthly subscription of ‚Äúcryptocurrency signals‚Äù, which are esentially specific predictions. Those services routinely claim that 80%+ of their signals are profitable.&lt;/p&gt;

&lt;p&gt;The only difference between signals and predictions is that signals are not ‚Äúboolean‚Äù, in that they are not ‚ÄúCorrect‚Äù or ‚ÄúIncorrect‚Äù, but instead they have a Profit Margin Ratio, that is, if you action them, you earn or lose a percentage of your investment.&lt;/p&gt;

&lt;p&gt;Nobody has ever done a reliable, transparent evaluation of a Cryptocurrency Signal site. It would be too tricky to build the infrastructure necessary to run it. With the tools I‚Äôve built, it would be very simple to do this.&lt;/p&gt;

&lt;h4 id=&quot;building-datasets-for-data-science-experiments&quot;&gt;Building datasets for data science experiments&lt;/h4&gt;

&lt;p&gt;If you‚Äôve ever reviewed any articles that do research based on market data, you‚Äôll quickly realise that it‚Äôs very rare to see any research aggregating data from different exchanges. There is &lt;a href=&quot;https://messari.io/&quot;&gt;Messari&lt;/a&gt;, but I initially implemented it and ended up scrapping it, as I couldn‚Äôt get reliable results.&lt;/p&gt;

&lt;p&gt;The library I open sourced for reading market data, &lt;a href=&quot;https://github.com/marianogappa/crypto-candles&quot;&gt;crypto-candles&lt;/a&gt;, is very efficient and has a very simple interface (it builds iterators), so I think it would be ideal for getting data for experiments.&lt;/p&gt;

&lt;p&gt;In general, while there are very good freemium UIs for cryptocurrency data, most notably &lt;a href=&quot;tradingview.com&quot;&gt;TradingView&lt;/a&gt;, there isn‚Äôt any good free API for getting market data across exchanges. crypto-candles solves this issue as a library you can import, or a CLI you can call.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I think that &lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt; was a useful, free warning service for people thinking about following the advice of cryptocurrency influencers. But even if it‚Äôs not, I really enjoyed building &lt;a href=&quot;https://github.com/marianogappa/crypto-predictions&quot;&gt;its backend&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately, &lt;a href=&quot;https://help.heroku.com/RSBRUH58/removal-of-heroku-free-product-plans-faq&quot;&gt;Heroku shut down the dynos&lt;/a&gt; I was using to power the cron and the API (switched to Render which &lt;a href=&quot;https://render.com/pricing&quot;&gt;has a free plan with DB &amp;amp; Cron&lt;/a&gt;), and &lt;a href=&quot;https://techcrunch.com/2023/02/01/twitter-to-end-free-access-to-its-api/&quot;&gt;Twitter restricted their API access&lt;/a&gt;, so it got too cumbersome to support it. I think there‚Äôs value that can be repurposed in an eventual iteration.&lt;/p&gt;

&lt;p&gt;Thanks for reading, and I hope you can benefit from the tools and services I created. Good luck!&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Jun 2023 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2023/06/17/building-crypto-predictions/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2023/06/17/building-crypto-predictions/</guid>
      </item>
    
      <item>
        <title>Cryptocurrency influencers are preying on millennials who found salvation in crypto</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Wisely investing our savings has always been important, but in the recent inflationary environment it is a must: &lt;strong&gt;if we don‚Äôt grow our savings, we lose them&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this blog post, I briefly summarise the past &amp;amp; present of investing and then focus on a problem with the recent trend of cryptocurrency investments: the &lt;strong&gt;difficulty of finding reputable advice&lt;/strong&gt; on how to invest.&lt;/p&gt;

&lt;p&gt;Finally, I present an engine I created to keep a track record for cryptocurrency influencers and beyond, starting with a Twitter account called &lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;. Please note that this is a completely-free project I created on my personal time, not a paid service I‚Äôm advertising.&lt;/p&gt;

&lt;p&gt;Even if you‚Äôre not interested in the tool, I hope this blog post can give you a good summary of the opportunities and dangers of cryptocurrency investments.&lt;/p&gt;

&lt;h2 id=&quot;investing-10-years-ago&quot;&gt;Investing, 10 years ago&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/terms/r/retailinvestor.asp&quot;&gt;Retail investors&lt;/a&gt;, that is, regular people who make investment decisions to grow their savings, traditionally used to have options like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/terms/t/termdeposit.asp&quot;&gt;&lt;strong&gt;Term deposits&lt;/strong&gt;&lt;/a&gt;, where they give money to their bank and let them keep it for a term, after which they are guaranteed to receive a little more than they put in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/terms/r/realestate.asp&quot;&gt;&lt;strong&gt;Real estate&lt;/strong&gt;&lt;/a&gt;, where they buy a house or a flat and rent it out for some extra income, or they don‚Äôt but the property value and/or land value sometimes appreciates over time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/terms/i/investment-fund.asp&quot;&gt;&lt;strong&gt;Investment funds&lt;/strong&gt;&lt;/a&gt;, where they make monthly contributions or lump sum contributions to a large pool of money actively managed by an investment firm, with capital at risk but higher rewards than a term deposit. Sometimes, the fund is not actively managed but instead tracks an index. Traditionally, joining an investment fund required an initial capital investment that was too high for the average Joe.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/articles/basics/09/precious-metals-gold-silver-platinum.asp&quot;&gt;&lt;strong&gt;Buying gold/silver&lt;/strong&gt;&lt;/a&gt; and keeping it in a safe, because historically these appreciate over time.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note: I‚Äôm ignoring other investment options like starting a small business, to focus on the more passive investment schemes, because I‚Äôm talking about retail investors‚Äô savings investment strategy, not entrepreneurs and wealthier people.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;investing-nowadays&quot;&gt;Investing nowadays&lt;/h2&gt;

&lt;p&gt;In the past few years, though, things have changed dramatically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Financial institutions started offering no-minimum-investment (or very small) funds, e.g. &lt;a href=&quot;https://www.fidelity.com/mutual-funds/investing-ideas/index-funds&quot;&gt;Fidelity&lt;/a&gt;, &lt;a href=&quot;https://investor.vanguard.com/investment-products/etfs/etf-fees&quot;&gt;Vanguard&lt;/a&gt;, &lt;a href=&quot;https://www.moneyfarm.com/uk/ppc-see-more/?gclid=Cj0KCQjwuuKXBhCRARIsAC-gM0jJa3e6SH-kUP2DCV0maQtHgQfL3zofqWerKiwv9FE7_AC9-sKU_RQaArTwEALw_wcB&quot;&gt;MoneyFarm&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Platforms that allow anyone to directly invest in things like stocks and currency exchange (forex) without a broker have become widespread, e.g. &lt;a href=&quot;https://www.etoro.com&quot;&gt;eToro&lt;/a&gt;, &lt;a href=&quot;https://www.plus500.com&quot;&gt;Plus500&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cryptocurrencies&lt;/strong&gt;, as speculative assets, also became a thing that anybody can invest in, with only a few clicks on your phone, e.g. &lt;a href=&quot;https://www.binance.com&quot;&gt;Binance&lt;/a&gt;, &lt;a href=&quot;https://www.coinbase.com&quot;&gt;Coinbase&lt;/a&gt;, &lt;a href=&quot;https://crypto.com/&quot;&gt;Crypto.com&lt;/a&gt; and probably even your bank‚Äôs phone app.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cryptocurrencies-as-an-investment-option&quot;&gt;Cryptocurrencies as an investment option&lt;/h2&gt;

&lt;p&gt;Cryptocurrencies like &lt;a href=&quot;https://en.wikipedia.org/wiki/Bitcoin&quot;&gt;Bitcoin&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Ethereum&quot;&gt;Ethereum&lt;/a&gt; and a few others are &lt;strong&gt;particularly attractive as speculative assets&lt;/strong&gt; because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In terms of &lt;strong&gt;long-term yield&lt;/strong&gt;: they have consistently appreciated at a ridiculously high rate, dwarfing other options.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In terms of &lt;strong&gt;taxation&lt;/strong&gt;: there are still plenty of ways to avoid paying any tax when ‚Äúcashing out‚Äù, whereas taxation is a big concern in all other investment options.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In terms of &lt;strong&gt;accessibility&lt;/strong&gt;: investing in cryptocurrencies is quicker and easier than any other method; just install an app or sign up to a website, give them money, choose what you want to buy and you‚Äôre done. Selling, transferring and withdrawing are quick and easy too.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In terms of &lt;strong&gt;economic outlook&lt;/strong&gt;: a wide range of established institutional leaders agree that cryptocurrency is not ‚Äújust‚Äù a &lt;a href=&quot;https://en.wikipedia.org/wiki/Ponzi_scheme&quot;&gt;Ponzi scheme&lt;/a&gt; and it‚Äôs not going away very soon, although it is heavily disputed where does it go from what it is now.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;However, there are also important risks&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unregulated, uninsured!&lt;/strong&gt;: traditional finance has insurance schemes like &lt;a href=&quot;https://www.fdic.gov/&quot;&gt;FDIC&lt;/a&gt;, and regulates financial institutions, establishing harsh penalties as deterrents against fraud. In the cryptocurrency economy none of this exists, so your ‚Äúbank‚Äù can potentially run away with your money unscathed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Unprecedented volatility&lt;/strong&gt;: The value fluctuation of even the most established cryptocurrencies is concerningly volatile in the short term. Bitcoin has lost more than &lt;a href=&quot;https://www.cnbc.com/2018/11/26/bitcoin-nears-its-worst-ever-bear-market-down-more-than-80percent-from-the-high.html&quot;&gt;80% of its value from its previous highs&lt;/a&gt; in a relatively short term more than once, including a &lt;a href=&quot;https://www.cnbc.com/2022/06/30/bitcoin-just-had-its-worst-month-in-more-than-a-year.html&quot;&gt;massive downturn recently&lt;/a&gt;. This is unnerving, and something unheard of in traditional finance, for the most part.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Risk of ruin&lt;/strong&gt;: With cryptocurrencies, there is a very real risk of losing everything for more than one reason:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The company you rely on to keep your ‚Äúmoney‚Äù &lt;a href=&quot;https://www.investopedia.com/terms/m/mt-gox.asp&quot;&gt;could be hacked and the funds stolen&lt;/a&gt;, no matter how established.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Even if you keep your own wallet, you could be hacked too. Why wouldn‚Äôt I hack you? I likely won‚Äôt go to jail.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;You could make poor investment decisions into higher-risk/higher-yield currencies &lt;a href=&quot;https://www.forbes.com/sites/jonmarkman/2022/05/16/cryptos-luna-catastrophe-threatens-conventional-assets/?sh=1ba77d3043cb&quot;&gt;that go all the way from market top #10 to ZERO&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Governments can decide one day that &lt;a href=&quot;https://www.investopedia.com/articles/forex/042015/why-governments-are-afraid-bitcoin.asp&quot;&gt;cryptocurrencies are dangerous and they should outlaw them&lt;/a&gt;, leading to a collapse of the whole ecosystem.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;millennials--gen-z-choose-cryptocurrency-investments&quot;&gt;Millennials &amp;amp; Gen Z choose cryptocurrency investments&lt;/h2&gt;

&lt;p&gt;If you ask the new generation to weigh the pros and cons stated above, most people will invest in cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Even the least reckless people can see the potential to get on this boat:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Keep to the most reputable platforms&lt;/strong&gt; (and diversify by having 1/3 of the assets on the top 3 platforms)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Buy only the safest currencies&lt;/strong&gt; (and diversify by having 1/3 of the assets on the top 3 currencies)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Keep them for a very long term&lt;/strong&gt; (5+ years) and they should multiplicate their value &lt;a href=&quot;https://www.nasdaq.com/articles/bitcoin-vastly-outperformed-gold-and-sp-500-over-the-past-decade&quot;&gt;by a very large factor&lt;/a&gt;, maybe even 100 times!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Read the news, and &lt;strong&gt;make minimal adjustments&lt;/strong&gt; necessary as the outlook for platforms &amp;amp; currencies change over time&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Keep some money in the traditional system&lt;/strong&gt;, because there‚Äôs always the danger of losing everything&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto_bitcoin_vs_gold_vs_sp500.png&quot; alt=&quot;Bitcoin vs Gold vs S&amp;amp;P500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the alternative&lt;/strong&gt; here? Work until you‚Äôre 65-70 and by the end you &lt;em&gt;might&lt;/em&gt; own a house or a flat, and hope it‚Äôs in a decent neighbourhood, although nowadays it‚Äôs more likely than not that either the next economic collapse or a climate catastrophe will &lt;a href=&quot;https://www.theguardian.com/money/2022/jul/04/retirement-on-hold-for-uks-over-60s-as-cost-of-living-crisis-bites&quot;&gt;wash those dreams away&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;choosing-an-investment-strategy&quot;&gt;Choosing an investment strategy&lt;/h2&gt;

&lt;p&gt;So, let‚Äôs say we‚Äôre one of these people. What do we buy? When do we sell? Who‚Äôs a good advisor here? Definitely not us. We don‚Äôt know anything about cryptocurrencies!&lt;/p&gt;

&lt;p&gt;Disregarding the more reckless or ignorant, most reasonable people would either:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Research a lot, choose an investment strategy and stick with it&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Accept they won‚Äôt know better and trusts someone else to make the decisions for them&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Combine both&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But &lt;strong&gt;finding someone you can trust in the crypto community is a very challenging task&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In crypto, people can easily profit by giving you advice, which presents a &lt;strong&gt;conflict of interest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Managed crypto funds are unregulated, so if you don‚Äôt choose a reputable one, more likely than not they‚Äôre gonna &lt;a href=&quot;https://www.cnbc.com/2022/07/12/founders-of-bankrupt-crypto-hedge-fund-three-arrows-go-missing.html&quot;&gt;disappear with your money&lt;/a&gt;. Sometimes, you can lose most of your money even if they don‚Äôt steal it!&lt;/p&gt;

&lt;h2 id=&quot;enter-the-cryptocurrency-influencer&quot;&gt;Enter the ‚ÄúCryptocurrency Influencer‚Äù&lt;/h2&gt;

&lt;p&gt;Recently, social networks have enabled some popular individuals (i.e. ‚Äúinfluencers‚Äù) to become trusted sources of cryptocurrency advice. Here are some example accounts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/scottmelker&quot;&gt;Scott Melker&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/Nicholas_Merten&quot;&gt;Nicholas Merten&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/rovercrc&quot;&gt;Crypto Rover&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/TheMoonCarl&quot;&gt;The Moon&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/BigCheds&quot;&gt;Big Cheds&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These individuals provide frequent and timely news and advice on cryptocurrency investment that you can action immediately, and they are often correct.&lt;/p&gt;

&lt;p&gt;Going deeper into the rabbit hole, there are monthly subscription services offered out there that go from giving you ‚Äúprofessional, premium‚Äù advice for a fee, or even going as specific as giving you trading ‚Äúsignals‚Äù, promising &amp;gt;80% success rate.&lt;/p&gt;

&lt;p&gt;Here are some, but I won‚Äôt link you to them for your own good:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Blockchain Whispers premium signals site&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Walsh Wealth Group&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Elite Crypto Signals&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-distinguish-good-advice-from-bad-advice&quot;&gt;How to distinguish good advice from bad advice?&lt;/h2&gt;

&lt;p&gt;It‚Äôs very common for fraudsters to &lt;a href=&quot;https://twitter.com/zachxbt/status/1516129830873583617&quot;&gt;pay influencers to promote their schemes&lt;/a&gt;, and sometimes influencers can even &lt;a href=&quot;https://twitter.com/zachxbt/status/1443583283648872464&quot;&gt;be the fraudsters themselves&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But not all actors are out there to harm you, and I‚Äôm not saying that the ones I mentioned are. There are a few reasons against harming you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If an influencer consistently gives poor advice, you‚Äôd expect them to lose influence.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If an influencer is exposed in a scam, they could get in trouble. Note that many influencers &lt;a href=&quot;https://twitter.com/BigCheds/status/1557865015411081219&quot;&gt;are anonymous&lt;/a&gt;: this is a red flag.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Morals, ethics, the desire to help people and wanting to keep a reputation do exist: some people, believe it or not, genuinely feel good by helping others and feel bad when hurting others, and they‚Äôd rather not be insanely rich if it means giving you bad advice.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how do we tell a decent influencer from a scammy one?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Research for a few years until you‚Äôre so deep in the rabbit hole that you know better?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Trust what your friends follow?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try them all and see which one is right most of the time?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In traditional finance, there are &lt;a href=&quot;https://www.imf.org/external/np/leg/amlcft/eng/aml1.htm&quot;&gt;watchdogs&lt;/a&gt;, &lt;a href=&quot;https://am.jpmorgan.com/us/en/asset-management/adv/tools/portfolio-tools/investment-comparison/&quot;&gt;comparison studies&lt;/a&gt;, plenty of &lt;a href=&quot;https://www.investopedia.com/articles/07/ben_graham.asp&quot;&gt;books&lt;/a&gt;, articles and government-regulated advisors that can legally give you financial advice. So far, in the Cryptocurrency World, none of this exists.&lt;/p&gt;

&lt;p&gt;There‚Äôs no answer to this section‚Äôs title question at the moment, but this needs to be resolved. And, to a degree, it can be.&lt;/p&gt;

&lt;h2 id=&quot;i-propose-a-simple-strategy-a-track-record&quot;&gt;I propose a simple strategy: a track record!&lt;/h2&gt;

&lt;p&gt;Influencers make predictions all the time, and some of these predictions are well-defined and specific enough that they are trackable, only no one is tracking them!&lt;/p&gt;

&lt;p&gt;If influencers had a track record, it would be safer to trust them, and easier to spot bad actors.&lt;/p&gt;

&lt;p&gt;This would benefit everyone:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Followers would have an objective way to evaluate if an influencer is reputable&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Influencers would have a way to build and demonstrate their reputation&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Influencers would be kept honest and would have a deterrent to making reckless predictions&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tracking cryptocurrency predictions made on social networks and websites &lt;strong&gt;is not only possible but also quite efficient and reliable&lt;/strong&gt;, as long as those predictions are specific enough:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/tech/190-cryptocurrency-exchanges-so-how-choose/&quot;&gt;Cryptocurrency market exchanges&lt;/a&gt; provide market data (recent and historical) promptly and free of charge &lt;a href=&quot;https://docs.ftx.com/#get-historical-prices&quot;&gt;via APIs&lt;/a&gt;; this data proves if a prediction became true or not.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Social network posts, such as Twitter tweets or Youtube videos are perfect as prediction evidence: they have a date, an owner, and mostly reasonably un-editable content.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto_social_post.png&quot; alt=&quot;Social Network Posts&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The process of turning these social network posts into structured predictions cannot be efficiently automated today, but it can easily be crowdsourced.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The cost of maintaining this whole process of tracking predictions can be cheap, as long as it‚Äôs implemented efficiently.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs an example of how this system would work&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Someone spots a prediction made on the Internet, like the image above.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upon inspecting that the prediction is specific enough, they input it into the system using some Back Office component.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto_back_office.png&quot; alt=&quot;Back Office&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The system then keeps track of it, by regularly looking at market data and letting time pass.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Eventually, the prediction becomes true or false, and the system notifies about this result, keeping a track record of each individual‚Äôs predictions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/crypto_prediction_result.png&quot; alt=&quot;Prediction Result&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;limitations-of-this-idea&quot;&gt;Limitations of this idea&lt;/h2&gt;

&lt;p&gt;Is this system a silver bullet for answering the question of who to trust? Absolutely not!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Most advice and predictions out there today &lt;a href=&quot;https://twitter.com/CryptoKaleo/status/1557773251933249536&quot;&gt;are not specific enough to be tracked&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Predictions do not all weigh the same; some predictions are &lt;a href=&quot;https://twitter.com/CryptoKaleo/status/1558313838877057025&quot;&gt;very narrow in timeframe, scope and volume&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can game the system to maximise prediction correctness&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It‚Äôs totally valid for a decent influencer to fail 10 predictions in a row&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of these problems have solutions, and some do not. But it‚Äôs still much better to have some form of accountability than to be completely in the dark.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: even if this system was good enough, I still wouldn‚Äôt recommend simply relying on some &lt;a href=&quot;https://en.wikipedia.org/wiki/Shamanism&quot;&gt;shaman&lt;/a&gt; on the Internet to tell you how to invest. Do your research!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I‚Äôve spent the last 6 months building the engine behind the &lt;strong&gt;&lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;&lt;/strong&gt;, during my free time after work.&lt;/p&gt;

&lt;p&gt;There‚Äôs much more to the engine behind the Twitter page that can be seen, and it could be extended to various use cases, and consumed in different ways to maximise its utility. I‚Äôm planning to write a technical blog post next on the architecture behind it.&lt;/p&gt;

&lt;p&gt;I hope this utility is useful to you as you navigate your investment strategy, but if it isn‚Äôt, at least I hope this summary of the crypto &amp;amp; investment space gives you some answers. If nothing else, my journey in building this tool felt like a story worth sharing.&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Aug 2022 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2022/08/25/cryptocurrency-influencers-are-preying-on-millennials-who-found-salvation-in-crypto/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2022/08/25/cryptocurrency-influencers-are-preying-on-millennials-who-found-salvation-in-crypto/</guid>
      </item>
    
      <item>
        <title>10 Gotchas for building a universal crypto candlestick iterator in Go</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;I‚Äôve recently open sourced a universal crypto candlestick iterator library in Go called crypto-candles:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marianogappa/crypto-candles&quot;&gt;https://github.com/marianogappa/crypto-candles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs being used to power the &lt;strong&gt;&lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;&lt;/strong&gt;: the only unbiased, automated accountability watchdog for crypto predictions on the Internet.&lt;/p&gt;

&lt;p&gt;There is no Go library alternative I‚Äôve found, or I would have used it. There are some exchange SDKs, though.&lt;/p&gt;

&lt;p&gt;In this blogpost, I share all the interesting challenges I found while building this library over the past few months.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-candlestick&quot;&gt;What is a candlestick?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/terms/c/candlestick.asp&quot;&gt;Candlesticks&lt;/a&gt;, also known as OHLC (i.e. Open, High, Low, Close), Klines and Bucketed Trades, are a way to display the high, low, open, and closing prices of crypto market pairs (and traditional securities) for a specific period.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.investopedia.com/thmb/F9Gcg7_Is-0Pj7jILEMe9IIscm0=/660x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/CandlestickDefinition3-a768ecdaadc2440db427fe8207491819.png&quot; alt=&quot;Candlestick&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tradingview.com/chart/QVMg9Xmj/?symbol=BINANCE%3ABTCUSDT&quot;&gt;Candlestick charts&lt;/a&gt; are a common sight for crypto investors, and they are used to make buy/sell decisions, either manually or via bots or some other automated mechanisms.&lt;/p&gt;

&lt;p&gt;Crypto exchanges like &lt;a href=&quot;https://www.binance.com&quot;&gt;Binance&lt;/a&gt; or &lt;a href=&quot;https://www.coinbase.com/&quot;&gt;Coinbase&lt;/a&gt; expose APIs with market information for all their supported market pairs (e.g. BTC/USDT) and allow you to consume them for free within fair-use limits.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/candlesticks.png&quot; alt=&quot;Candlestick chart&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-crypto-candlestick-iterator&quot;&gt;What is a crypto candlestick iterator?&lt;/h2&gt;

&lt;p&gt;A Crypto Candlestick Iterator is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Iterator_pattern&quot;&gt;iterator&lt;/a&gt; that you construct for:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a given provider (e.g. Binance, Coinbase)&lt;/li&gt;
  &lt;li&gt;a given market pair (e.g. BTC/USDT)&lt;/li&gt;
  &lt;li&gt;a given starting timestamp (e.g. ‚Äú2020-07-04T01:02:03Z‚Äù, here represented in ISO8601 format)&lt;/li&gt;
  &lt;li&gt;and a given candlestick interval (e.g. minutely, hourly, daily).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example in crypto-candles:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MarketSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BINANCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;BaseAsset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BTC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;QuoteAsset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;USDT&quot;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Start time&lt;/span&gt;
		&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                   &lt;span class=&quot;c&quot;&gt;// Candlestick interval&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once constructed, calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.Next()&lt;/code&gt; on it returns either the next available candlestick in your specified interval, or an error:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;candlestick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A candlestick looks like this when marshalled to JSON:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1641096000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;o&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;47329.47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;46910.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;l&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;46770.23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;47415.73&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o&lt;/code&gt;: Open price&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c&lt;/code&gt;: Close price&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l&lt;/code&gt;: Low price&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt;: High price&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚Ä¶of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BTC/USDT&lt;/code&gt; market pair&lt;/p&gt;

&lt;p&gt;‚Ä¶on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BINANCE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‚Ä¶at the hour spanning from the timestamp &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t&lt;/code&gt; and up to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t + candlestickInterval&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-does-universal-candlestick-iterator-mean&quot;&gt;What does ‚Äúuniversal‚Äù candlestick iterator mean?&lt;/h2&gt;

&lt;p&gt;It means that it supports all major exchanges.&lt;/p&gt;

&lt;p&gt;Usually, you use the API or SDK of the exchange you want to use. If you need to use more than one, it gets tricky.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-use-case-for-a-universal-candlestick-iterator&quot;&gt;What‚Äôs the use case for a universal candlestick iterator?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Data for plotting candlestick charts. If you need 2+ exchanges.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Data for backtesting trading strategies. If you need 2+ exchanges.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Data for being a watchdog for influencing statements &lt;a href=&quot;https://twitter.com/rovercrc/status/1539710164697227267&quot;&gt;like this one&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And with crypto-candles, you get caching, retrying on errors, patching of data gaps and concurrency-safety for free.&lt;/p&gt;

&lt;h2 id=&quot;the-meaty-part-gotchas&quot;&gt;The meaty part: gotchas!&lt;/h2&gt;

&lt;p&gt;Building this library through the months has been a big challenge, and in this section I‚Äôll list all of the important gotchas I‚Äôve found during this process.&lt;/p&gt;

&lt;h3 id=&quot;gotcha-1-not-all-exchanges-provide-historical-candlesticks&quot;&gt;Gotcha 1: Not all exchanges provide historical candlesticks&lt;/h3&gt;

&lt;p&gt;They all provide current prices. Not all provide historicals. Some do in very tricky ways.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FTX&lt;/strong&gt; does:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://ftx.com/api/markets/BTC/USDT/candles?resolution=60&amp;amp;start_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-04-07 00:00:00&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;end_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-04-07 00:02:00&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;&apos;.result | .[]&apos;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;startTime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2020-04-06T23:00:00+00:00&quot;&lt;/span&gt;,
	&lt;span class=&quot;s2&quot;&gt;&quot;time&quot;&lt;/span&gt;: 1586214000000,
	&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;: 7274,
	&lt;span class=&quot;s2&quot;&gt;&quot;high&quot;&lt;/span&gt;: 7281.5,
	&lt;span class=&quot;s2&quot;&gt;&quot;low&quot;&lt;/span&gt;: 7272,
	&lt;span class=&quot;s2&quot;&gt;&quot;close&quot;&lt;/span&gt;: 7281.5,
	&lt;span class=&quot;s2&quot;&gt;&quot;volume&quot;&lt;/span&gt;: 0
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;startTime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2020-04-06T23:01:00+00:00&quot;&lt;/span&gt;,
	&lt;span class=&quot;s2&quot;&gt;&quot;time&quot;&lt;/span&gt;: 1586214060000,
	&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;: 7281.5,
	&lt;span class=&quot;s2&quot;&gt;&quot;high&quot;&lt;/span&gt;: 7281.5,
	&lt;span class=&quot;s2&quot;&gt;&quot;low&quot;&lt;/span&gt;: 7277,
	&lt;span class=&quot;s2&quot;&gt;&quot;close&quot;&lt;/span&gt;: 7280,
	&lt;span class=&quot;s2&quot;&gt;&quot;volume&quot;&lt;/span&gt;: 0
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;startTime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2020-04-06T23:02:00+00:00&quot;&lt;/span&gt;,
	&lt;span class=&quot;s2&quot;&gt;&quot;time&quot;&lt;/span&gt;: 1586214120000,
	&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;: 7280,
	&lt;span class=&quot;s2&quot;&gt;&quot;high&quot;&lt;/span&gt;: 7280,
	&lt;span class=&quot;s2&quot;&gt;&quot;low&quot;&lt;/span&gt;: 7271.5,
	&lt;span class=&quot;s2&quot;&gt;&quot;close&quot;&lt;/span&gt;: 7274,
	&lt;span class=&quot;s2&quot;&gt;&quot;volume&quot;&lt;/span&gt;: 0
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But on &lt;strong&gt;Huobi&lt;/strong&gt;, &lt;a href=&quot;https://huobiapi.github.io/docs/spot/v1/en/#get-klines-candles&quot;&gt;the docs&lt;/a&gt; say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This API doesn‚Äôt support customized period, refer to Websocket K line API to get the emurated period value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not sure what that means, but I don‚Äôt think Websockets do either.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt; says they do, but they silently ignore their ‚Äúsince‚Äù parameter if you go over a very short threshold to the past. Details in &lt;a href=&quot;https://stackoverflow.com/a/48618456/965724&quot;&gt;this Stack Overflow answer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can still get them, if you calculate them yourself, by getting all trades and bucketing them yourself. It‚Äôs linear time. But you have no control on what &lt;em&gt;n&lt;/em&gt; is, so don‚Äôt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phemex&lt;/strong&gt; has only a &lt;a href=&quot;https://github.com/phemex/phemex-api-docs/blob/master/Public-Spot-API-en.md#subscribe-kline&quot;&gt;websocket-based ‚Äúsubscribe kline‚Äù endpoint&lt;/a&gt;, but only gets you up to 1000 candlesticks to the past. Then you‚Äôre stuck with Kraken-style &lt;a href=&quot;https://github.com/phemex/phemex-api-docs/blob/master/Public-Spot-API-en.md#query-trades-history&quot;&gt;Query Trades History endpoint&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;gotcha-2-rate-limiting&quot;&gt;Gotcha 2: Rate limiting&lt;/h3&gt;

&lt;p&gt;All exchanges must have a rate-limiting strategy to prevent malicious or buggy clients from &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DDoSing&lt;/a&gt; their APIs. Otherwise you‚Äôd kill them!&lt;/p&gt;

&lt;p&gt;In general (not always!), they give you an &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#429&quot;&gt;HTTP 429 status code&lt;/a&gt; when they want you to enhance your calm. If you don‚Äôt, &lt;strong&gt;they IP-ban&lt;/strong&gt; you temporarily.&lt;/p&gt;

&lt;p&gt;In general, candlestick endpoints are ‚Äúpublic market data‚Äù and don‚Äôt require an API Key. But if you get one, they might be more tolerant with rate-limiting.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;Binance&lt;/strong&gt;, &lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en/#general-api-information&quot;&gt;the docs&lt;/a&gt; say that if you ignore the 429s, you get IP banned for 2 minutes, and up to 3 days for repeat offenders. They send a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Retry-After&lt;/code&gt; header on the 429s with how many seconds you should sleep.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;Coinbase&lt;/strong&gt;, &lt;a href=&quot;https://docs.cloud.coinbase.com/sign-in-with-coinbase/docs/rate-limiting&quot;&gt;the docs here&lt;/a&gt; and &lt;a href=&quot;https://help.coinbase.com/en/pro/other-topics/api/faq-on-api&quot;&gt;here&lt;/a&gt; say they allow ~3-6 requests per second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FTX&lt;/strong&gt; &lt;a href=&quot;https://help.ftx.com/hc/en-us/articles/360052595091-2020-11-20-Ratelimit-Updates&quot;&gt;docs&lt;/a&gt; make no sense. Don‚Äôt worry, you‚Äôre fine.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;Kucoin&lt;/strong&gt;, the docs lie, so you don‚Äôt need a link. You‚Äôre gonna get 429‚Äôd no matter what you do. Just back-off.&lt;/p&gt;

&lt;p&gt;The other ones are fine, more on that later.&lt;/p&gt;

&lt;p&gt;Ideally, don‚Äôt make them 429 you. Do this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Calculate the truncated current minute of your request: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time.Now().Add(-1 * time.Minute).Truncate(time.Minute)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Keep track of the last requested minute, and a counter&lt;/li&gt;
  &lt;li&gt;If the current minute of your request equals the last, increment the counter (and reset it if not)&lt;/li&gt;
  &lt;li&gt;If the counter exceeds the exchange‚Äôs limits, sleep!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Don‚Äôt use concurrency&lt;/strong&gt; unless:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Every goroutine talks to a different exchange&lt;/li&gt;
  &lt;li&gt;You have a pool of IPs and a proxy, and every goroutine talks to a separate (exchange, IP) tuple&lt;/li&gt;
  &lt;li&gt;You‚Äôre willing to mutex the hell out of your code&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;gotcha-3-some-exchanges-dont-respect-their-rate-limit-documentation&quot;&gt;Gotcha 3: Some exchanges don‚Äôt respect their rate limit documentation&lt;/h3&gt;

&lt;p&gt;You‚Äôre following the rules? The rules are wrong.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;Kucoin&lt;/strong&gt;, &lt;a href=&quot;https://docs.kucoin.com/#request-rate-limit&quot;&gt;the docs&lt;/a&gt; say that they allow an IP to make 10 requests per second. They don‚Äôt. There are &lt;a href=&quot;https://www.reddit.com/r/kucoin/comments/q5blef/api_ratelimits_problems/&quot;&gt;many&lt;/a&gt;, &lt;a href=&quot;https://www.reddit.com/r/kucoin/comments/q40ode/whats_the_request_rate_limit/&quot;&gt;Reddit&lt;/a&gt;, &lt;a href=&quot;https://www.reddit.com/r/kucoin/comments/lmdld9/kucoin_api_limits/&quot;&gt;links&lt;/a&gt; out there with people fuming about their aggressive undocumented rate limiting practices.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;Bitfinex&lt;/strong&gt;, &lt;a href=&quot;https://docs.bitfinex.com/docs/requirements-and-limitations&quot;&gt;the docs&lt;/a&gt; say they allow 10-90 requests per minute, but I ran this script that made ~140 requests per minute for many minutes and I cannot get it to rate limit me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;while [ TRUE ]; do echo $(curl &quot;https://api-pub.bitfinex.com/v2/candles/trade:1m:tBTCUSD/hist?limit=3&amp;amp;sort=1&amp;amp;start=1564774820000&quot; | jq .); done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;gotcha-4-candlestick-data-may-be-incomplete&quot;&gt;Gotcha 4: Candlestick data may be incomplete&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproductcandles&quot;&gt;Coinbase docs&lt;/a&gt; explicitly say there are gaps in the data. And it‚Äôs true. More often in the 1 minute interval.&lt;/p&gt;

&lt;p&gt;Problems it causes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;You‚Äôre plotting a chart. Is it ok to leave a gap in it?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You‚Äôre sending candlesticks to something. The receiving end hardcodes the timestamp to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startTimestamp + i * interval&lt;/code&gt;. Bug.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You‚Äôre backtesting a strategy. Your bot receives a candlestick with price 0 (or a gap) and freaks out. Bug.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Possible solution: fill gaps by cloning previously known prices. Doesn‚Äôt work if the gap is at the start.&lt;/p&gt;

&lt;h3 id=&quot;gotcha-5-you-wont-get-the-starting-candlestick-time-you-asked-for&quot;&gt;Gotcha 5: You won‚Äôt get the starting candlestick time you asked for&lt;/h3&gt;

&lt;p&gt;The final boss! Trickiest gotcha.&lt;/p&gt;

&lt;p&gt;You request candlesticks starting at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2020-07-04T01:02:03Z&lt;/code&gt;. But you won‚Äôt get that starting timestamp.&lt;/p&gt;

&lt;p&gt;Exchanges snap your starting time to the data they have, and they &lt;em&gt;mostly&lt;/em&gt; do the same. &lt;em&gt;Mostly&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For 1m interval: they will mostly start at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2020-07-04T01:03:00Z&lt;/code&gt; (i.e. the next minute).&lt;/li&gt;
  &lt;li&gt;For 1h interval: they will mostly start at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2020-07-04T02:00:00Z&lt;/code&gt; (i.e. the next hour).&lt;/li&gt;
  &lt;li&gt;For 1d interval: they will mostly start at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2020-07-05T00:00:00Z&lt;/code&gt; (i.e. the next day).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the point. Do this:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;snapTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Truncate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;FTX&lt;/strong&gt; for minutely candlesticks:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://ftx.com/api/markets/BTC/USDT/candles?resolution=60&amp;amp;start_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04 00:00:33&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;end_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04 00:03:33&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;&apos;.result | .[] | .startTime&apos;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:01:00+00:00&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:02:00+00:00&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:03:00+00:00&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Bitstamp&lt;/strong&gt; is the only one that snaps to the past, here on minutely:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.bitstamp.net/api/v2/ohlc/btcusd/?limit=3&amp;amp;step=60&amp;amp;start=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04 00:00:33&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;&apos;.data.ohlc | .[] | .timestamp | tonumber | todate&apos;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:00:00Z&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:01:00Z&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04T00:02:00Z&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What about intervals that are not divisors of 24-hour, e.g. 5-hour? They don‚Äôt support them!&lt;/p&gt;

&lt;p&gt;And don‚Äôt get me started on weekly. Some support weekly. It‚Äôs important.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Binance&lt;/strong&gt; &amp;amp; &lt;strong&gt;Bitfinex&lt;/strong&gt; work with the same truncation strategy:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;tm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RFC3339&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2020-07-04T01:02:03Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hour&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;snap&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Truncate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which produces: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2020-07-06T00:00:00Z&lt;/code&gt;. Let‚Äôs see if it‚Äôs true:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;https://api.binance.com/api/v3/klines?symbol=BTCUSDT&amp;amp;interval=1w&amp;amp;limit=3&amp;amp;startTime=&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04 01:02:03&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s000&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;| jq &lt;span class=&quot;s1&quot;&gt;&apos;.[] | .[0] | . / 1000 | todate&apos;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-06T00:00:00Z&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-13T00:00:00Z&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-20T00:00:00Z&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Kucoin&lt;/strong&gt; snaps to Thursdays, and don‚Äôt ask me why!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FTX&lt;/strong&gt; is a unique case. They support 1-day, 2-day, ‚Ä¶, 30-day. On these, they snap your timestamp to next day (or same if it‚Äôs already start of day), and then give you multiples starting on that day. Here‚Äôs an example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://ftx.com/api/markets/BTC/USDT/candles?resolution=259200&amp;amp;start_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-04 01:02:03&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;end_time=&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UTC &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2020-07-10 00:00:00&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+%s&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;&apos;.result | .[] | .startTime&apos;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-05T00:00:00+00:00&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-07T00:00:00+00:00&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;2020-07-10T00:00:00+00:00&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;gotcha-6-order-of-returned-candlesticks-varies-across-exchanges&quot;&gt;Gotcha 6: Order of returned candlesticks varies across exchanges&lt;/h3&gt;

&lt;p&gt;Most exchanges return &lt;em&gt;ascending&lt;/em&gt; order candlesticks. &lt;strong&gt;Coinbase&lt;/strong&gt; and &lt;strong&gt;Kucoin&lt;/strong&gt; return &lt;em&gt;descending&lt;/em&gt;. &lt;strong&gt;Bitfinex&lt;/strong&gt; returns &lt;em&gt;descending&lt;/em&gt; by default, but can be changed.&lt;/p&gt;

&lt;p&gt;Just reverse them. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(n)&lt;/code&gt; time, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(1)&lt;/code&gt; space:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;candles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;gotcha-7-exchanges-silently-ignoring-arguments&quot;&gt;Gotcha 7: Exchanges silently ignoring arguments&lt;/h3&gt;

&lt;p&gt;From Gotcha #1: &lt;strong&gt;Kraken&lt;/strong&gt; ignores the ‚Äúsince‚Äù parameter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FTX&lt;/strong&gt; is dangerous. In &lt;a href=&quot;https://docs.ftx.com/#get-historical-prices&quot;&gt;the FTX request&lt;/a&gt;, you provide a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start_time&lt;/code&gt; and an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end_time&lt;/code&gt; for historical prices.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end_time&lt;/code&gt; is not specified, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start_time&lt;/code&gt; is ignored silently and recent data is returned.&lt;/li&gt;
  &lt;li&gt;if the range between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start_time&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end_time&lt;/code&gt; is too broad, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start_time&lt;/code&gt; will be pushed forward until the range spans 1500 candlesticks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gotcha-8-invalid-market-pairs&quot;&gt;Gotcha 8: Invalid market pairs&lt;/h3&gt;

&lt;p&gt;You can‚Äôt request candlesticks for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INVALID/USDT&lt;/code&gt;. But all exchanges tell you this differently.&lt;/p&gt;

&lt;p&gt;HTTP status codes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bitstamp&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kucoin&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Binance&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;400&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;FTX&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coinbase&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bitfinex&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP Payloads:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bitstamp&lt;/strong&gt;: no payload&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kucoin&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&quot;code&quot;: &quot;400100&quot;, &quot;msg&quot;: &quot;This pair is not provided at present.&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Binance&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&quot;code&quot;: -1121, &quot;msg&quot;: &quot;Invalid symbol.&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;FTX&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&quot;success&quot;: false, &quot;error&quot;: &quot;No such market: INVALID/USDT &quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coinbase&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&quot;message&quot;: &quot;NotFound&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bitfinex&lt;/strong&gt;: no payload&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bitfinex&lt;/strong&gt; is the worst. It‚Äôs hard to tell it‚Äôs an invalid market pair. It could be that there are no new candlesticks, because your starting time is too recent.&lt;/p&gt;

&lt;h3 id=&quot;gotcha-9-requesting-the-most-recent-candlesticks&quot;&gt;Gotcha 9: Requesting the most recent candlesticks&lt;/h3&gt;

&lt;p&gt;Be careful! Exchanges mostly don‚Äôt care if you ask for non-historical starting times.&lt;/p&gt;

&lt;p&gt;Here‚Äôs &lt;strong&gt;Binance&lt;/strong&gt; returning &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200 OK&lt;/code&gt; with the 3-minute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BTC/USDT&lt;/code&gt; candlesticks for the year &lt;strong&gt;2286&lt;/strong&gt;!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://api.binance.com/api/v3/klines?symbol=BTCUSDT&amp;amp;interval=3m&amp;amp;limit=60&amp;amp;startTime=9999999999000&quot;&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;&apos;.&apos;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that if you ask for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time.Now().Add(-1*time.Hour)&lt;/code&gt;, but for daily candlesticks, your day is not over yet!&lt;/p&gt;

&lt;p&gt;Even if it‚Äôs over, how over is it? Race condition! Your exchange hasn‚Äôt finalised bucketing the day yet!&lt;/p&gt;

&lt;p&gt;If you plan to cache results, danger zone! Recent candlesticks will change.&lt;/p&gt;

&lt;p&gt;I ran experiments to see in practical terms how much to ‚Äúlag‚Äù to current candlesticks, and put that ‚Äúpatience configuration‚Äù in the library.&lt;/p&gt;

&lt;h3 id=&quot;gotcha-10-caching-results&quot;&gt;Gotcha 10: Caching results&lt;/h3&gt;

&lt;p&gt;An iterator has a buffer of results that came from the latest request. That‚Äôs all it needs.&lt;/p&gt;

&lt;p&gt;But real-world applications will create multiple iterators. A cache is probably needed there. &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;The 80/20 rule&lt;/a&gt; suggests 80% of created iterators will be for 20% of the options. You can imagine &lt;strong&gt;Binance&lt;/strong&gt;‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BTC/USDT&lt;/code&gt; recent hourly candlesticks being popular.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://martinfowler.com/bliki/TwoHardThings.html&quot;&gt;Caching is hard&lt;/a&gt;, but in this case it‚Äôs a very sensible architectural choice:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Historical candlesticks should not change (meh, except for Gotcha #9)&lt;/li&gt;
  &lt;li&gt;Each cache hit saves up to ~100 milliseconds in HTTP requests&lt;/li&gt;
  &lt;li&gt;Not making requests minimises rate-limiting issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What about storing cache on filesystem?&lt;/p&gt;

&lt;p&gt;Some exchanges even provide all of their historical data &lt;a href=&quot;https://data.binance.vision/?prefix=data/spot/daily/klines/&quot;&gt;as files&lt;/a&gt;. Great, ~0 requests! But:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Only a few exchanges provide it&lt;/li&gt;
  &lt;li&gt;Cron to download new files, which will break&lt;/li&gt;
  &lt;li&gt;Parsing different file formats for different exchanges&lt;/li&gt;
  &lt;li&gt;Maybe 4-fallback level architecure (i.e. iterator buffer, in-memory cache, filesystem, HTTP request)&lt;/li&gt;
  &lt;li&gt;New challenges (e.g. out-of-disk, permissions, rotating, wholes in data)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How about just an in-memory &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&quot;&gt;LRU cache&lt;/a&gt;?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;LRU plays well with 80/20 request distribution&lt;/li&gt;
  &lt;li&gt;Has fixed-size memory (configurable)&lt;/li&gt;
  &lt;li&gt;Inefficient if you restart the process, but a non-invalidating cache scares me; let‚Äôs refresh it on restarts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I started tinkering with the idea of building this more than a year ago in &lt;a href=&quot;https://github.com/marianogappa/signal-checker/commit/ce6d9faddee7ff6e672d734b6eeb86abb63a5bd3&quot;&gt;this commit&lt;/a&gt; of a different repo, and I still feel like I don‚Äôt fully get it.&lt;/p&gt;

&lt;p&gt;Building this has been hard, but very fun too, and rewarding. It‚Äôs &lt;a href=&quot;https://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT licensed&lt;/a&gt; so feel free to use it, profit from it, lose money with my bugs, file issues, contribute improvements, etc. &lt;a href=&quot;https://pkg.go.dev/github.com/marianogappa/crypto-candles&quot;&gt;Docs are here&lt;/a&gt;, but go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;candles&lt;/code&gt; folder to see most of it.&lt;/p&gt;

&lt;p&gt;I also hope that the &lt;strong&gt;&lt;a href=&quot;https://twitter.com/crypto_preds&quot;&gt;Crypto Predictions Tracker&lt;/a&gt;&lt;/strong&gt; becomes popular, so that influencers get some accountability for their predictions. This is good: it will keep them honest, and improve their reputation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot;&gt;K.I.S.S.&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jul 2022 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2022/07/27/10-gotchas-for-building-a-universal-crypto-candlestick-iterator-in-go/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2022/07/27/10-gotchas-for-building-a-universal-crypto-candlestick-iterator-in-go/</guid>
      </item>
    
      <item>
        <title>Running Golang on the browser with WebAssembly and TinyGo</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;This is the story of how I managed to expose my Golang chess API project &lt;a href=&quot;https://github.com/marianogappa/cheesse&quot;&gt;cheesse&lt;/a&gt; as a &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt; binary, compiled using &lt;a href=&quot;https://tinygo.org/&quot;&gt;TinyGo&lt;/a&gt;, so JavaScript could use it without needing a server.&lt;/p&gt;

&lt;p&gt;The blogpost is optimised for helping others going through a similar exercise, rather than for readability, so expect a little too much of ‚Äúif this, do this‚Äù. Sorry.&lt;/p&gt;

&lt;h2 id=&quot;what-are-all-those-technologies&quot;&gt;What are all those technologies?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Assembly language of the Web, apparently. All major browsers support it, and the Go compiler supports js/wasm as an OS/ARCH target, so one can write Go code that runs on a webpage, rather than on a server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TinyGo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs a Go compiler optimised for the WebAssembly target (and also for microcontrollers). The key advantage over the official Go compiler is that it generates &lt;em&gt;tiny&lt;/em&gt; binaries. &lt;a href=&quot;https://github.com/golang/go/wiki/WebAssembly#reducing-the-size-of-wasm-files&quot;&gt;Even the Go wiki&lt;/a&gt; recommends using TinyGo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheesse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Chess API that tells you, e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;given chess board: what are the possible moves?&lt;/li&gt;
  &lt;li&gt;given a chess board and an action: what does the game look like after?&lt;/li&gt;
  &lt;li&gt;given a chess match in some notation: how does the chess board evolve?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whats-the-goal&quot;&gt;What‚Äôs the goal?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;em&gt;cheesse&lt;/em&gt; API compiles to a wasm binary, exposing the API to JavaScript without needing a server.&lt;/li&gt;
  &lt;li&gt;It is not necessary to maintain a separate version of the code to compile to this target.&lt;/li&gt;
  &lt;li&gt;The generated wasm binary has a reasonable size for use on the Web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exposing-api-to-javascript&quot;&gt;Exposing API to JavaScript&lt;/h2&gt;

&lt;p&gt;Consider one of &lt;em&gt;cheesse&lt;/em&gt;‚Äôs basic endpoints:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ParseGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You give it a chess game and it spits out all relevant info about it, or an error if input is wrong.&lt;/p&gt;

&lt;p&gt;This is how you expose a function onto the JavaScript global scope:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// This should be in a &quot;main_js.go&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ParseGame&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FuncOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ParseGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Code must not finish&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you don‚Äôt do that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select{}&lt;/code&gt;, or something to that effect, you‚Äôll find this error in the Developer console of your browser:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Go program has already exited
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mapping-values-from-js-to-go-and-vice-versa&quot;&gt;Mapping values from JS to Go and vice-versa&lt;/h2&gt;

&lt;p&gt;This is the implementation of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ParseGame&lt;/code&gt; function defined above:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;og&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ParseGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;convertToInputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;outputGame&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;og&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Basically just mapping the API‚Äôs inputs and outputs to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js/syscall&lt;/code&gt;‚Äôs interfaces.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ParseGame&lt;/code&gt; follows &lt;a href=&quot;https://golang.org/pkg/syscall/js/#FuncOf&quot;&gt;js.FuncOf()&lt;/a&gt;‚Äôs interface:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; are the arguments supplied to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ParseGame&lt;/code&gt; from JavaScript.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a simplified implementation of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;convertToInputGame&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertToInputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputGame&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DefaultGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsBool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;defaultGame&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FENString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fenString&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;jsBool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;jsString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;convertOutputGame&lt;/code&gt;, it‚Äôs trickier. Here‚Äôs a very simplified &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OutputGame&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputGame&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FENString&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;         &lt;span class=&quot;s&quot;&gt;`json:&quot;fenString&quot;`&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Actions&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputAction&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;actions&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputAction&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FromSquare&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;`json:&quot;fromSquare&quot;`&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ToSquare&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;`json:&quot;toSquare&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;How do we map a struct with a slice of structs to something that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js.ValueOf&lt;/code&gt; can receive? For this, first review &lt;a href=&quot;https://golang.org/pkg/syscall/js/#ValueOf&quot;&gt;the docs&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func ValueOf(x interface{}) Value

ValueOf returns x as a JavaScript value:

Go                    | JavaScript 
----------------------| -----------
js.Value              | [its value]
js.Func               | function   
nil                   | null       
bool                  | boolean    
integers and floats   | number     
string                | string     
[]interface{}         | new array  
map[string]interface{}| new object 

Panics if x is not one of the expected types.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Go struct =&amp;gt; JS object, so top-layer we must send a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map[string]interface{}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The trick is: the map‚Äôs values (i.e. the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interface{}&lt;/code&gt; part) follow the same rules from those docs. That‚Äôs how we achieve the nesting.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;og&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;fenString&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;og&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FENString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;og&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertOutputAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;fromSquare&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromPieceSquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;toSquare&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToSquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ok-compile-time&quot;&gt;Ok, compile time!&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚úî &lt;span class=&quot;nv&quot;&gt;$ GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;js &lt;span class=&quot;nv&quot;&gt;GOARCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wasm go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; poc/main.wasm
&lt;span class=&quot;c&quot;&gt;# github.com/marianogappa/cheesse&lt;/span&gt;
./main_js.go:39:6: main redeclared &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this block
	previous declaration at ./main.go:17:6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oh, right. We have two &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt;. We can use build constraints.&lt;/p&gt;

&lt;p&gt;Put this on the first line of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.go&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// +build !js

package main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this on the first line of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_js.go&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// +build js,wasm

package main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Don‚Äôt forget to leave a &lt;strong&gt;newline&lt;/strong&gt; between the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package main&lt;/code&gt;. That‚Äôs &lt;a href=&quot;https://golang.org/pkg/go/build/#hdr-Build_Constraints&quot;&gt;not optional&lt;/a&gt; and fails silently.&lt;/p&gt;

&lt;p&gt;Also, don‚Äôt do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+build !js,wasm&lt;/code&gt;. That doesn‚Äôt work either. There‚Äôs only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wasm&lt;/code&gt; anyway, right?&lt;/p&gt;

&lt;h2 id=&quot;ok-compile-time-2&quot;&gt;Ok, compile time! #2&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚úî $ GOOS=js GOARCH=wasm go build -o poc/main.wasm
‚úî $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;üéâ&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://github.com/golang/go/wiki/WebAssembly#getting-started&quot;&gt;these instructions&lt;/a&gt; on how to load the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.wasm&lt;/code&gt; into an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;If you try to open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; directly on your browser you‚Äôll get this error on the browser‚Äôs Developer Console:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Fetch API cannot load file:///.../poc/main.wasm.
URL scheme must be &quot;http&quot; or &quot;https&quot; for CORS request.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need to serve the files.&lt;/p&gt;

&lt;h2 id=&quot;serving-the-files&quot;&gt;Serving the files&lt;/h2&gt;

&lt;p&gt;Your favourite one-liner server (is it Python‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SimpleHTTPServer&lt;/code&gt; for all of us?), might give you this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TypeError: Response has unsupported MIME type
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need a server that knows about WebAssembly‚Äôs MIME type.&lt;/p&gt;

&lt;p&gt;The easy way:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# install goexec: go get -u github.com/shurcooL/goexec
$ goexec &apos;http.ListenAndServe(`:8080`, http.FileServer(http.Dir(`.`)))&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you really want to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SimpleHTTPServer&lt;/code&gt; there‚Äôs a solution that I validated to work &lt;a href=&quot;https://curiousprog.com/2018/10/08/serving-webassembly-files-with-a-development-web-server/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;did-it-work&quot;&gt;Did it work?&lt;/h2&gt;

&lt;p&gt;Yes! üéâ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/webassembly-tinygo-cheesse.gif&quot; alt=&quot;Working Proof of Concept&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But there‚Äôs a catch:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; main.wasm
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt;  1 marianol  staff   7.6M 28 Mar 20:45 main.wasm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I know the Web is bloated, but 7.6MB is not gonna fly.&lt;/p&gt;

&lt;h2 id=&quot;enter-tinygo&quot;&gt;Enter TinyGo&lt;/h2&gt;

&lt;p&gt;Drop-in replacement for the Go compiler, right?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tinygo build -o poc/main.wasm -target wasm .
error: requires go version 1.11, 1.12, or 1.13, got go1.14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, that‚Äôs not that bad. Go 1.14 is gonna be supported &lt;a href=&quot;https://github.com/tinygo-org/tinygo/pull/901&quot;&gt;soon&lt;/a&gt;, but for now we‚Äôll have to downgrade:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install go@1.13
...
$ echo &apos;export PATH=&quot;/usr/local/opt/go@1.13/bin:$PATH&quot;&apos; &amp;gt;&amp;gt; ~/.bash_profile
...
$ go version
go version go1.13.9 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tinygo-round-2&quot;&gt;TinyGo, Round 2!&lt;/h2&gt;

&lt;p&gt;Drop-in replacement for the Go compiler, right?&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tinygo build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; poc/main.wasm &lt;span class=&quot;nt&quot;&gt;-target&lt;/span&gt; wasm &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# encoding/asn1&lt;/span&gt;
usr/local/Cellar/go@1.13/1.13.9/libexec/src/encoding/asn1/marshal.go:537:47: v.Type&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;.NumMethod undefined &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;reflect.Type has no field or method NumMethod&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
usr/local/Cellar/go@1.13/1.13.9/libexec/src/encoding/asn1/marshal.go:549:14: DeepEqual not declared by package reflect
usr/local/Cellar/go@1.13/1.13.9/libexec/src/encoding/asn1/marshal.go:558:14: DeepEqual not declared by package reflect
usr/local/Cellar/go@1.13/1.13.9/libexec/src/encoding/asn1/marshal.go:479:93: t.Field&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;startingField&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.Tag.Get undefined &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;string has no field or method Get&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
usr/local/Cellar/go@1.13/1.13.9/libexec/src/encoding/asn1/marshal.go:483:103: t.Field&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i + startingField&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.Tag.Get undefined &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;string has no field or method Get&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oh, God, what‚Äôs all this?&lt;/p&gt;

&lt;p&gt;Ok, the thing with TinyGo is that there are many stdlib packages that are not yet supported, so if you must use them then you can‚Äôt use TinyGo, unfortunately.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tinygo.org/lang-support/stdlib/&quot;&gt;https://tinygo.org/lang-support/stdlib/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some key unsupported packages: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encoding/json&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net/http&lt;/code&gt; (I assume &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encoding/asn1&lt;/code&gt; is a dependency of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net/http&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;I was using both. Since I don‚Äôt need them for the JS part, the solution is to use a TinyGo-specific build constraint instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;// +build !js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// +build !tinygo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And vice-versa for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_js.go&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tinygo-round-3&quot;&gt;TinyGo, Round 3!&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tinygo build -o poc/main.wasm -target wasm .
# github.com/marianogappa/cheesse
main_js.go:102:7: j.IsUndefined undefined (type js.Value has no field or method IsUndefined)
main_js.go:102:26: j.IsNull undefined (type js.Value has no field or method IsNull)
main_js.go:95:7: j.IsUndefined undefined (type js.Value has no field or method IsUndefined)
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unsupported &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js/syscall&lt;/code&gt; methods?&lt;/p&gt;

&lt;p&gt;Nah, this one is not on TinyGo. We‚Äôve downgraded Go to 1.13.9, so those methods don‚Äôt exist anymore.&lt;/p&gt;

&lt;p&gt;Replace all:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tinygo-round-4&quot;&gt;TinyGo, Round 4!&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tinygo build -o poc/main.wasm -target wasm .
# github.com/marianogappa/cheesse/api
/usr/local/Cellar/tinygo/0.12.0/src/sync/pool.go:14:14 unsupported instruction during init evaluation:
  %23 = inttoptr i32 %22 to %runtime._interface (i8*, i8*)*, !dbg !1864
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Huh?&lt;/p&gt;

&lt;p&gt;Ok, that‚Äôs confusing, but it‚Äôs something to do with an instruction that runs during an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init()&lt;/code&gt; that indirectly ends up in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sync/pool&lt;/code&gt;, that must be unsupported or something.&lt;/p&gt;

&lt;p&gt;I don‚Äôt use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init()&lt;/code&gt;, and &lt;a href=&quot;https://github.com/leighmcculloch/gochecknoinits&quot;&gt;neither should you&lt;/a&gt;. But if you have a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt; in the global scope (i.e. a global variable) that calls something, then the Go compiler will put that in an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You shouldn‚Äôt have globals either, but we make some exceptions, and in my case it was like a million error literals like this one:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errBlackCastle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;impossible for black to castle since king has moved&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It turns out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fmt.Errorf&lt;/code&gt; ends up calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sync/pool&lt;/code&gt;. A brilliant workaround for this one is to replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fmt.Errorf&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;errors.New&lt;/code&gt;. This only works if you have nothing to interpolate, but since it‚Äôs a global, you probably don‚Äôt.&lt;/p&gt;

&lt;p&gt;If you have other globals that call things, keep the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;, but initialise the value in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tinygo-round-5&quot;&gt;TinyGo: Round 5!&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tinygo build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; poc/main.wasm &lt;span class=&quot;nt&quot;&gt;-target&lt;/span&gt; wasm &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
inlinable &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;call &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;with debug info must have a &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;dbg location
  call void @runtime.nilPanic&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; undef, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; null&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
inlinable &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;call &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;with debug info must have a &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;dbg location
  %352 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; call fastcc i1 @&lt;span class=&quot;s2&quot;&gt;&quot;github.com/marianogappa/cheesse/api.boolMatcher&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i32 %351, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %pack.int217, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %341, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; undef&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
inlinable &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;call &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;with debug info must have a &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;dbg location
  %353 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; call fastcc i1 @&lt;span class=&quot;s2&quot;&gt;&quot;github.com/marianogappa/cheesse/api.intMatcher&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i32 %351, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %pack.int217, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %341, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; undef&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
inlinable &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;call &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;with debug info must have a &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;dbg location
  %354 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; call fastcc i1 @&lt;span class=&quot;s2&quot;&gt;&quot;github.com/marianogappa/cheesse/api.pieceTypeMatcher&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i32 %351, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %pack.int217, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; %341, i8&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; undef&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
error: optimizations caused a verification failure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;WAT.
Ok, I don‚Äôt know. But if you get this, the workaround is to add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-no-debug&lt;/code&gt; flag to the compile line.&lt;/p&gt;

&lt;h2 id=&quot;tinygo-round-6&quot;&gt;TinyGo, Round 6!&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tinygo build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; poc/main.wasm &lt;span class=&quot;nt&quot;&gt;-no-debug&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-target&lt;/span&gt; wasm &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OMG, YES! üéâüéâüéâ Did it work???&lt;/p&gt;

&lt;p&gt;Nope. If you get an error in the Developer Console on your browser, perhaps this one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TypeError: import object field &apos;wasi_unstable&apos; is not an Object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need to take into account that every compiler you use, and every version of that compiler might have a different companion &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wasm_exec.js&lt;/code&gt;. For TinyGo, do this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;tinygo &lt;span class=&quot;nb&quot;&gt;env &lt;/span&gt;TINYGOROOT&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;/targets/wasm_exec.js &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tinygo-round-7&quot;&gt;TinyGo, Round 7!&lt;/h2&gt;

&lt;p&gt;You might do absolutely everything right, get it compiled and then go to your browser‚Äôs Developer Console and see this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;panic: syscall/js: Value.Call: property _makeFuncWrapper is not a function, got undefined [wasm_exec.js:201:19](http://localhost:8000/wasm_exec.js)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That one is this issue:
&lt;a href=&quot;https://github.com/tinygo-org/tinygo/issues/716&quot;&gt;https://github.com/tinygo-org/tinygo/issues/716&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It might be solved by the time you read this, but the workaround at the time of this writing is to switch to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; version of TinyGo, which is pretty bleeding edge but seems to work well.&lt;/p&gt;

&lt;p&gt;Follow the &lt;a href=&quot;https://tinygo.org/getting-started/macos/&quot;&gt;Source Install instructions&lt;/a&gt; and change branch before installing.&lt;/p&gt;

&lt;p&gt;Something like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;llvm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go get &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; github.com/tinygo-org/tinygo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GOPATH&lt;/span&gt;/src/github.com/tinygo-org/tinygo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout dev
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tinygo-round-8&quot;&gt;TinyGo, Round 8!&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tinygo build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; poc/main.wasm &lt;span class=&quot;nt&quot;&gt;-no-debug&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-target&lt;/span&gt; wasm &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Before testing on the browser, remember that you‚Äôve changed the version of TinyGo, so you must copy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wasm_exec.js&lt;/code&gt; again, only this time the file is in a different place because you‚Äôve built from source:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GOPATH&lt;/span&gt;/src/github.com/tinygo-org/tinygo/targets/wasm_exec.js &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Did it work???&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/webassembly-tinygo-cheesse.gif&quot; alt=&quot;Working Proof of Concept&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OMG, YES! üéâüéâüéâ&lt;/p&gt;

&lt;h2 id=&quot;one-last-check&quot;&gt;One last check&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; main.wasm
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt;  1 marianol  staff   392K 29 Mar 00:21 main.wasm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;392 KB! That‚Äôs an amazing improvement from 7.6MB! üéâüéâüéâ&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Writing Go code for the browser is a reality today. But it‚Äôs no picnic. Ideally, we‚Äôd write whatever we want, run the Go compiler and get a 1kb npm package or something, right? Well, we‚Äôll get there. Still a better love story than writing JavaScript, aye.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marianogappa.github.io/cheesse-examples/&quot;&gt;auto-play proof of concept&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marianogappa/cheesse&quot;&gt;cheesse open source project&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;I didn‚Äôt come up with most of the solutions to the issues outlined in this blogpost. This was only possible thanks to the kind and patient help I received from TinyGo‚Äôs author &lt;a href=&quot;https://twitter.com/aykevl&quot;&gt;Ayke van Laethem&lt;/a&gt; and contributors &lt;a href=&quot;https://twitter.com/jaddr2line&quot;&gt;Jaden Weiss&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/JohanBrandhorst&quot;&gt;Johan Brandhorst&lt;/a&gt; for hours on end at the #tinygo channel on &lt;a href=&quot;https://invite.slack.golangbridge.org/&quot;&gt;GopherSlack&lt;/a&gt;.
Also, thanks to &lt;a href=&quot;https://twitter.com/_myitcv&quot;&gt;Paul Jolly&lt;/a&gt; for pointing me in the right direction while getting started with WebAssembly.&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2020/04/01/webassembly-tinygo-cheesse/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2020/04/01/webassembly-tinygo-cheesse/</guid>
      </item>
    
      <item>
        <title>A chess story</title>
        <description>&lt;p&gt;On the last week of October of 2015, whilst working as a software engineer for the film industry in Auckland, New Zealand, my company announced that we were going to host a full-day ‚Äúhackathon‚Äù. A hackathon is an event in which a large number of people meet to engage in collaborative computer programming.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-hackathon.png&quot; alt=&quot;Chess Story: Hackathon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My favourite hackathon idea was to come up with a game similar to chess, but with a large board and no turns, that is, a real-time chess World game! I was incredibly excited, so I gathered my dream team of engineers for an impromptu meeting where I pitched the project. Unfortunately, no one liked the idea. The most senior engineer on the team rightfully pointed out that such a project would take months, and we only had 24 hours. I was disappointed, but nowhere near giving up!&lt;/p&gt;

&lt;p&gt;On November 2nd, 2015, I started a timid open source project code-named ‚Äúostinato‚Äù. Ostinato is an italian noun that plays with the adjective ‚Äúobstinate‚Äù, meaning ‚Äústubbornly refusing to change one‚Äôs opinion or chosen course of action, despite attempts to persuade one to do so‚Äù, which is exactly what this project was all about. At the time, the project was an attempt to build a generic engine for board games:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-initial-commit.png&quot; alt=&quot;Chess Story: Initial commit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It turned out that making a computer engine for chess was not quite a walk in the park. Over the next 5 months I spent most of my free time working on it; notably the whole Easter long weekend:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-easter.png&quot; alt=&quot;Chess Story: Easter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By the time the bulk of the development was finished, ostinato was quite a unique project. Sure, there were faster, smarter, more beautiful chess sites available on the Internet, but ostinato was one of the few free and open source tools online that would allow people to input chess matches from a book or a magazine and playing them back on screen, or converting them to different notations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-converter.png&quot; alt=&quot;Chess Story: Converter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From a technical standpoint, it is still the only publicly available chess engine I know that works both as a server and standalone within the browser. On March 27th, 2019, I realised that the top Google result for converting chess notations is the ostinato library!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-google.png&quot; alt=&quot;Chess Story: Google&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On September 12th, 2017, I received an email from a 79-year-old man from San Pedro, California whose name was Ken Pauley. In it there was a polite request for fixing a few issues with the conversion from Descriptive to Algebraic Notation. Excited to see traction on a near-abandoned project, I eagerly replied and tried to work out some of the issues pointed out in the email thread.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-ken-email.png&quot; alt=&quot;Chess Story: Ken&apos;s email&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To my surprise, the interactions between Ken and me never stopped. At the time of this writing, we‚Äôve shared 161 email threads in the last 3 years, and have formed quite the long-distance and inter-generational friendship. Some perks of this newfound friendship have included receiving a few treats of Hawaian provenance!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-treats.png&quot; alt=&quot;Chess Story: Treats&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On March 6th, 2019, Ken floated the idea of converting Irving Chernev‚Äôs 1962 classic Practical Chess Endings to Algebraic notation. Then on June 20th, 2019, I was asked to be a co-author, to which I agreed.&lt;/p&gt;

&lt;p&gt;Because there is no digitised version of the existing book (although there is an image-only scanned version on Google Books), Ken had to do the complete digitising effort himself, which has been an arduous process.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-arduous.jpg&quot; alt=&quot;Chess Story: Arduous&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, thanks to the chess engine available and the long hours sitting at the computer, Ken was able to find and fix countless errors in the original publication. In turn, I was able to produce a website counterpart to the book where one can browse through the games by looking at an actual board and watching the endings unfold.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/chess-story-website.png&quot; alt=&quot;Chess Story: Website&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite the many lost weekends and the long nights figuring out obscure technical issues, this has been a unique and exciting 5-year experience, and I‚Äôm very proud of sharing the unlikely story of how an American aerospace engineer in his 80s and an Argentine software engineer in his 30s with a common passion found each other on the Internet and published a chess book together; a story worth sharing.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://marianogappa.github.io/software/2020/01/03/chess-story/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2020/01/03/chess-story/</guid>
      </item>
    
      <item>
        <title>Let&apos;s build a SQL parser in Go!</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;This article aims to be the simplest introduction to constructing an &lt;a href=&quot;https://en.wikipedia.org/wiki/LL_parser&quot;&gt;LL(1) parser&lt;/a&gt; in Go, in this case for parsing SQL queries. It assumes minimal programming competence (functions, structs, ifs and for-loops).&lt;/p&gt;

&lt;p&gt;Here‚Äôs the complete parser repository if you want to skip to results:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marianogappa/sqlparser&quot;&gt;github.com/marianogappa/sqlparser&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;simplification-disclaimer&quot;&gt;Simplification disclaimer&lt;/h2&gt;

&lt;p&gt;To make things simple we‚Äôre gonna descope sub-selects, functions, complex nested expressions and other features that all SQL flavours support. Those features get really involved quickly with the strategy we‚Äôre gonna use.&lt;/p&gt;

&lt;h2 id=&quot;1-minute-theory-lesson&quot;&gt;1-minute theory lesson&lt;/h2&gt;

&lt;p&gt;A parser has two parts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;the Lexical Analysis: a.k.a. the ‚Äú&lt;a href=&quot;https://en.wikipedia.org/wiki/Lexical_analysis#Tokenization&quot;&gt;Tokeniser&lt;/a&gt;‚Äù&lt;/li&gt;
  &lt;li&gt;the Syntactic Analysis: the creation of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;AST&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;lexical-analysis&quot;&gt;Lexical Analysis&lt;/h3&gt;

&lt;p&gt;Let‚Äôs define it by example. ‚ÄúTokenising‚Äù the following query:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;users.csv&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Means extracting the ‚Äútokens‚Äù that form this query. The result of the tokeniser would be something like:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FROM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&apos;users.csv&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;syntactic-analysis&quot;&gt;Syntactic Analysis&lt;/h3&gt;

&lt;p&gt;This part is where we actually look at the tokens, make sure they make sense and interpret them to construct some product &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; that represents the query in a way that is convenient for the application that is gonna use it (e.g. for executing the query, colour highlighting it). After this step, we‚Äôd end up with something like:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Select&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;users.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are a lot of ways in that parsing can fail, so it would be convenient to do the two steps at the same time and stop as soon as something goes wrong.&lt;/p&gt;

&lt;h2 id=&quot;strategy&quot;&gt;Strategy&lt;/h2&gt;

&lt;p&gt;We‚Äôll define a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parser&lt;/code&gt; that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;             &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;// The query to parse&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;               &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;// Where we are in the query&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;// The &quot;query struct&quot; we&apos;ll build&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;// What&apos;s this? Read on...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// Main function that returns the &quot;query struct&quot; or an error&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// A &quot;look-ahead&quot; function that returns the next token to parse&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// same as peek(), but advancing our &quot;i&quot; index&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Intuitively, what we would do first is to ‚Äúpeek() the first token‚Äù. In a basic SQL grammar, there are only a few valid initial tokens: SELECT, UPDATE, DELETE, etc; anything else is an error already. The code would look something like:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SELECT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SELECT&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// start building the &quot;query struct&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;// TODO continue with SELECT query parsing...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UPDATE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;// TODO handle UPDATE&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// TODO other cases...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;invalid query type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we can basically fill in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TODO&lt;/code&gt;s and profit! However, the diligent reader will see that the code for parsing the whole &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; query can get messy really quickly, and we have many types of queries to parse. We‚Äôre gonna need some structure.&lt;/p&gt;

&lt;h2 id=&quot;finite-state-machines&quot;&gt;Finite-state Machines&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Finite-state_machine&quot;&gt;FSMs&lt;/a&gt; are a super interesting topic, but we‚Äôre not here to get a CS degree. Let‚Äôs just focus on what we need.&lt;/p&gt;

&lt;p&gt;At any given point (instead of ‚Äúpoint‚Äù let‚Äôs call it ‚Äúnode‚Äù) in our parsing journey, only a few tokens are valid, and upon finding these tokens we advance to new nodes where different tokens are valid, and so on until we finish parsing our query. We can visualise these node relationships as a directed graph:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_parser_graph.png&quot; alt=&quot;SQL Parser Graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The node transitions can be defined with a simpler table, though:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_parser_table.png&quot; alt=&quot;SQL Parser Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can directly translate this table to a really large switch statement. We‚Äôll use that sneaky &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parser.step&lt;/code&gt; property we defined before:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepType&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// initial step&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nextToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextToken&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UPDATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UPDATE&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepUpdateTable&lt;/span&gt;

      &lt;span class=&quot;c&quot;&gt;// TODO cases of other query types&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepUpdateSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepUpdateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stepUpdateComma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there we go! Note that some steps might conditionally cycle back to previous ones, like a comma on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; field definition. This strategy scales well for basic parsers. As the grammar grows complex, though, the number of states will increase dramatically, so it can get tedious to write. I recommend testing as you code; more on that below.&lt;/p&gt;

&lt;h2 id=&quot;peek-implementation&quot;&gt;Peek() implementation&lt;/h2&gt;

&lt;p&gt;Remember that we need to implement both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;peek()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop()&lt;/code&gt;. Since they do almost the same, let‚Äôs use an auxiliary function to keep things &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;DRY&lt;/a&gt;. Also, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop()&lt;/code&gt; should further advance the index to avoid peeking whitespace.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;peeked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peekWithLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peeked&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;peeked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peekWithLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popWhitespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peeked&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popWhitespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here‚Äôs a list of tokens that we might want to peek:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservedWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;(&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;!=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;SELECT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;INSERT INTO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;VALUES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UPDATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;DELETE FROM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;WHERE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FROM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In addition to those, we might come across quoted strings or plain identifiers (e.g. field names). Here‚Äôs a hopefully complete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;peekWithLength()&lt;/code&gt; implementation:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peekWithLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservedWords&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;upToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rWord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&apos;\&apos;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Quoted string&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peekQuotedStringWithLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peekIdentifierWithLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The remaining functions are trivial and left as an exercise to the reader. If you‚Äôre curious, the link at the TL;DR section contains the full source code implementation. I intentionally won‚Äôt link it again here to add a little indirection.&lt;/p&gt;

&lt;h2 id=&quot;final-validation&quot;&gt;Final validation&lt;/h2&gt;

&lt;p&gt;The parser might find the end of the string before arriving at a complete query definition. It‚Äôs probably a good idea to implement a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parser.validate()&lt;/code&gt; function that looks at the generated ‚Äúquery‚Äù struct, and returns an error if it‚Äôs incomplete or otherwise wrong.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Go‚Äôs table-driven testing pattern lends itself beautifully for our case:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testCase&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;     &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;// description of the test&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;// input sql e.g. &quot;SELECT a FROM &apos;b&apos;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Expected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;// expected resulting &quot;query&quot; struct&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;// expected error result&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example tests:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;s&quot;&gt;&quot;empty query fails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Expected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;query type cannot be empty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;s&quot;&gt;&quot;SELECT without FROM fails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;&quot;SELECT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Expected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table name cannot be empty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test the test cases like this:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error should have been %v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error should have been nil but was %v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Unexpected error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;&quot;Query didn&apos;t match expectation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I‚Äôm using &lt;a href=&quot;https://github.com/stretchr/testify&quot;&gt;testify&lt;/a&gt; because it provides a diff output when the query structs don‚Äôt match.&lt;/p&gt;

&lt;h2 id=&quot;going-deeper&quot;&gt;Going deeper&lt;/h2&gt;

&lt;p&gt;This experiment is well-suited for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learning LL(1) parser algorithms&lt;/li&gt;
  &lt;li&gt;Custom parsing simple grammars with zero dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, this approach can get tedious and it‚Äôs somewhat limiting. Think about how to parse arbitrarily complex compound expressions (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sqrt(a) = (1 * (2 + 3))&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;For a more powerful parsing model, look into &lt;a href=&quot;https://en.wikipedia.org/wiki/Parser_combinator&quot;&gt;parser combinators&lt;/a&gt;. &lt;a href=&quot;https://godoc.org/golang.org/x/tools/cmd/goyacc&quot;&gt;goyacc&lt;/a&gt; is a popular Go implementation.&lt;/p&gt;

&lt;p&gt;I recommend &lt;a href=&quot;https://www.youtube.com/watch?v=HxaD_trXwRE&quot;&gt;this very interesting talk&lt;/a&gt; by Rob Pike on Lexical Scanning.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.binghamton.edu/~zdu/parsdemo/recintro.html&quot;&gt;Recursive descent parsing&lt;/a&gt; is another parsing approach.&lt;/p&gt;

&lt;h2 id=&quot;why-i-wrote-this&quot;&gt;Why I wrote this&lt;/h2&gt;

&lt;p&gt;Recently, I‚Äôve decided to centralise my data into a repository of CSVs. As a bonus, it‚Äôd give me a chance to learn &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; better by creating a UI for &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt;ing the data. When I had to decide on an interface for communicating CRUD operations between frontend and backend, I felt SQL was a natural language for it (and I already know it well).&lt;/p&gt;

&lt;p&gt;It seems that, although there are many libraries for reading CSV files with SQL, there aren‚Äôt many that support write operations (particularly &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_definition_language&quot;&gt;DDL statements&lt;/a&gt;). A colleague recommended me to upload the files into an in-memory &lt;a href=&quot;https://www.sqlite.org/index.html&quot;&gt;SQLite database&lt;/a&gt;, run the SQL and then export to CSV; a fine idea since performance wasn‚Äôt at all a concern for me. In the end, I thought to myself: didn‚Äôt you always want to write a SQL parser? How hard can it be?&lt;/p&gt;

&lt;p&gt;Turns out writing a (basic) parser is very simple! But I bet it can appear daunting without a good tutorial that is as simple as can be.&lt;/p&gt;

&lt;p&gt;I hope this can be that tutorial for you. &lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot;&gt;KISS!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2019/06/05/lets-build-a-sql-parser-in-go/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2019/06/05/lets-build-a-sql-parser-in-go/</guid>
      </item>
    
      <item>
        <title>We saved $50k/y with a tiny Go microservice coded in a Hackathon</title>
        <description>&lt;p&gt;NOTE: my original blogpost was published &lt;a href=&quot;https://movio.co/en/blog/saving-money-with-Hackathon-project/&quot;&gt;in the Movio blog&lt;/a&gt;. I‚Äôve had to steal it because it went offline for a while, the link sometimes 404s, and they‚Äôve broken some links. I don‚Äôt want it to be lost. The following content is unchanged from the original.&lt;/p&gt;

&lt;p&gt;In the past few weeks we‚Äôve rolled out a Go microservice called ‚ÄúKIB‚Äù to production, which reduced a huge portion of the infrastructure necessary for &lt;a href=&quot;https://movio.co/en/movio-cinema/&quot;&gt;Movio Cinema&lt;/a&gt;‚Äôs core tools: Group Builder and Campaign Execution. In doing this, we saved considerable AWS bills, after-hours and office-hours support bills, significantly simplified our architecture and made our product 80% faster on average. We wrote KIB on a Hackathon.&lt;/p&gt;

&lt;p&gt;Despite the fact that the domain-specific components of this post don‚Äôt apply to every dev team, the success of applying the &lt;a href=&quot;https://go-proverbs.github.io/&quot;&gt;guiding principles&lt;/a&gt; of simplicity and pragmatism driving our decision-making process felt like a story worth sharing.&lt;/p&gt;

&lt;h2 id=&quot;group-builder&quot;&gt;Group Builder&lt;/h2&gt;

&lt;p&gt;Movio Cinema‚Äôs core functionality is to send targeted marketing campaigns to a cinema chain‚Äôs loyalty members. If you‚Äôre a member of a big cinema chain‚Äôs loyalty program, wherever you are in the world, chances are the emails you‚Äôre getting from it come from us.&lt;/p&gt;

&lt;p&gt;Group Builder facilitates the segmentation of loyalty members by the construction of groups of filters of varying complexity over the cinema‚Äôs loyalty member base.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/kib_group_builder.png&quot; alt=&quot;Group Builder screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://movio.co/en/blog/category/case-studies/&quot;&gt;Marketing teams around the world&lt;/a&gt; build the perfect audiences for their marketing campaigns using this tool.&lt;/p&gt;

&lt;h2 id=&quot;the-group-builder-algorithm&quot;&gt;The Group Builder algorithm&lt;/h2&gt;

&lt;p&gt;By using this algorithm, an arbitrarily complex set of filters can be solved with a single SQL query. Note that it‚Äôs domain-agnostic; you can use this strategy for filtering any set of elements.&lt;/p&gt;

&lt;h3 id=&quot;constraints&quot;&gt;Constraints&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A Group Builder group can have any number of filters.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filters can be grouped together in an arbitrary number of sub-groups.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Strictly for UI/UX reasons, sub-groups can be nested only once (i.e. up to sub-sub-groups).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filters and groups operate against each other using &lt;a href=&quot;https://en.wikipedia.org/wiki/Algebra_of_sets&quot;&gt;Algebra of Sets&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each filter can either include or exclude set elements, set elements being loyalty members. The UI shows filters as green when they include members, and red when it excludes members.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs the SQL strategy&lt;/p&gt;

&lt;p&gt;This would be the final query for the Group Builder UI image above; note that the 3 filter subqueries represent the 3 filters shown in the image:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loyaltyMemberID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                       &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loyaltyMemberID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Ä¶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gender&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                       &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loyaltyMemberID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Ä¶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                       &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loyaltyMemberID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Ä¶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Censor&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loyaltyMemberID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äú&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äù&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äú&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äù&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;f3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parens&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;equate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subgroups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Each sub-query in the UNION section selects the set of loyalty members after applying each filter in the group. The result set of the UNION (before the GROUP BY) will have one row per member per filter. The GROUP BY together with the AGGREGATE FUNCTIONs in the main SELECT section provide a very simple way to replicate the set algebra specified in the Group Builder UI, which you can see cleanly separated in the HAVING section.&lt;/p&gt;

&lt;h2 id=&quot;the-limits-of-mysql&quot;&gt;The limits of MySQL&lt;/h2&gt;

&lt;p&gt;The Group Builder algorithm worked really well in the beginning, but after some customers reached more than 5 million members (and 100 million sales transactions) the queries simply became way too slow to be able to provide timely feedback.&lt;/p&gt;

&lt;p&gt;We needed an option that was fast but didn‚Äôt require re-architecting our whole product. That option was &lt;a href=&quot;https://en.wikipedia.org/wiki/InfiniDB&quot;&gt;InfiniDB&lt;/a&gt;. This was 2014.&lt;/p&gt;

&lt;h2 id=&quot;infinidb-a-magic-drop-in-replacement&quot;&gt;InfiniDB: a magic drop-in replacement&lt;/h2&gt;

&lt;p&gt;InfiniDB was a MySQL almost-drop-in replacement that stored data in &lt;a href=&quot;https://en.wikipedia.org/wiki/Column-oriented_DBMS&quot;&gt;columnar format&lt;/a&gt;. As such, and given our queries were rarely involving many fields, our InfiniDB implementation was a big success. We didn‚Äôt stop using MySQL; instead we replicated data to InfiniDB in near real-time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/kib_infinidb_diagram.png&quot; alt=&quot;InfiniDB diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Super-slow groups were fast again! We rolled out our InfiniDB implementation to all big customers and saved the day.&lt;/p&gt;

&lt;h2 id=&quot;the-cons-of-our-implementation-of-infinidb&quot;&gt;The cons of our implementation of InfiniDB&lt;/h2&gt;

&lt;p&gt;Despite the success of our solution, it wasn‚Äôt without significant costs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The InfiniDB instances &lt;a href=&quot;https://github.com/infinidb/infinidb/issues/21&quot;&gt;required a lot of memory and CPU&lt;/a&gt; to function properly, so we had to put them on &lt;a href=&quot;https://aws.amazon.com/ec2/instance-types/i3/&quot;&gt;i3.2xlarge&lt;/a&gt; EC2 instances. This was &lt;a href=&quot;https://www.ec2instances.info/?cost_duration=annually&amp;amp;selected=i3.2xlarge&quot;&gt;very expensive&lt;/a&gt; (~$7k per annum), considering we didn‚Äôt charge extra for InfiniDB-powered Movio Cinema consoles.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;InfiniDB didn‚Äôt have a master-slave scheme for replication (except for &lt;a href=&quot;https://dba.stackexchange.com/questions/174133/infinidb-replication-and-failover&quot;&gt;this&lt;/a&gt;), so we had to build our own custom one. Unfortunately, table name-swapping sometimes got some tables corrupted and we had to re-bootstrap the whole schema to come back up online, a process that could take several hours.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had a &lt;a href=&quot;https://github.com/infinidb/infinidb/issues/3&quot;&gt;recurring bug&lt;/a&gt; where some complex count queries would just return 0 results on InfiniDB, but the same query on MySQL wouldn‚Äôt. It was never resolved.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Even though InfiniDB was much faster than MySQL, we still saw some slow running groups for every big customer every week throughout 2017.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The company behind InfiniDB sadly &lt;a href=&quot;http://infinidb.co/forum/important-announcement-infinidb&quot;&gt;had to shutdown&lt;/a&gt; and was eventually &lt;a href=&quot;https://mariadb.com/about-us/newsroom/press-releases/open-source-leader-mariadb-rockets-analytics-market&quot;&gt;incorporated into MariaDB&lt;/a&gt; (now &lt;a href=&quot;https://mariadb.com/products/technology/columnstore&quot;&gt;MariaDB ColumnStore&lt;/a&gt;); this meant no updates nor bugfixes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;InfiniDB had no substantial community, so it was really hard to troubleshoot any issues. There were only &lt;a href=&quot;https://stackoverflow.com/search?q=infinidb&quot;&gt;120 questions&lt;/a&gt; on StackOverflow at the time of this writing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;research-time&quot;&gt;Research time&lt;/h2&gt;

&lt;p&gt;During the winter of 2017 we had an upcoming &lt;a href=&quot;https://movio.co/en/blog/Hackathon-August-2017/&quot;&gt;Hackathon&lt;/a&gt;, so three of us decided to do a little research on how to create an alternative solution for Group Builder.&lt;/p&gt;

&lt;p&gt;We found that, even in slow-running groups, most of the filters were relatively simple and fast queries, and retrieving the resulting set of members was incredibly fast as well (~one million per second). The slowness was mostly in the final aggregation step, which could produce billions of intermediate rows on groups with many filters.&lt;/p&gt;

&lt;p&gt;However, a few filters were slow no matter what. Even on fully indexed query execution plans they still had to scan over half a billion rows.&lt;/p&gt;

&lt;p&gt;How could we circumvent these two issues with a simple solution achievable in a day?&lt;/p&gt;

&lt;h2 id=&quot;hackathon-idea-the-kib-project&quot;&gt;Hackathon idea: the KIB project&lt;/h2&gt;

&lt;p&gt;Our solution was:&lt;/p&gt;

&lt;p&gt;1) Reviewing all slow filters for quick wins (e.g. adding/changing indexes, reworking queries)&lt;/p&gt;

&lt;p&gt;2) Running every filter as a separate query against MySQL concurrently, and doing the aggregation programmatically using sparse bitsets&lt;/p&gt;

&lt;p&gt;3) Caching filter results for a number of minutes to minimise the time recalculating long-running queries, given the repetitive usage pattern shown by our customers&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/kib_kib_diagram.png&quot; alt=&quot;KIB diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After the Hackathon, we quickly added two planned features that covered outstanding problematic cases:&lt;/p&gt;

&lt;p&gt;1) Refreshing caches automatically, to make most frequently used filters and slow-running ones very quick at all times.&lt;/p&gt;

&lt;p&gt;2) Pre-caching on startup based on usage history.&lt;/p&gt;

&lt;p&gt;We packed these features into a tiny Go microservice called KIB and shipped it onto a c4.xlarge EC2 instance (&amp;lt;$3k per annum). While before we had one InfiniDB instance on a i3.2xlarge for each customer, in this case we put all customers on the same single c4.xlarge instance.&lt;/p&gt;

&lt;p&gt;We did add a second instance for fault tolerance, and it was a fortunate decision, because that very week our EC2 instance died. Thanks to our &lt;a href=&quot;https://movio.co/en/blog/6-months-kubernetes-production/&quot;&gt;Kubernetes cluster implementation&lt;/a&gt;, the KIB instance quickly restarted on the second healthy node and no customers were impacted. In contrast, when our InfiniDB nodes died, re-bootstrapping would sometimes take hours. Note, however, that this was not an intrinsic problem of InfiniDB itself, but of our custom replication implementation of it.&lt;/p&gt;

&lt;h2 id=&quot;why-go&quot;&gt;Why Go?&lt;/h2&gt;

&lt;p&gt;The long answer to that question is described in &lt;a href=&quot;https://marianogappa.github.io/software/2017/01/25/making-the-move-from-scala-to-go-and-why-were-not-going-back/&quot;&gt;this blogpost&lt;/a&gt;. In short, we‚Äôve been coding in Go for about a year, and it has noticeably reduced our estimations and workload, made our code much simpler, which in turn has indirectly improved our software quality, and in general has made our work more rewarding.&lt;/p&gt;

&lt;p&gt;Here are the key bits of the KIB Go code with only a few details elided:&lt;/p&gt;

&lt;p&gt;An endpoint request represents a Group Builder group to be run, and the group is represented as a tree of SQL queries. It looks somewhat like this:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQLNode&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;node&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQLNode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;`json:&quot;sql&quot;`&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt;   &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;`json:&quot;operator&quot;`&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Nodes&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQLNode&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;nodes&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the function that takes the request and resolves every SQL in the tree to a bitset:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toBitsets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bitsetWr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitsetWr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;treeRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// runs all SQL concurrently&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// waits for all goroutines to finish&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the inner function that deals with the tree structure; running ‚Äúsolve‚Äù on every node:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQLNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// if leaf&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// runs SQL; fills bitset&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// if group&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Nodes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this is the inner function that runs the SQL (or loads from cache) concurrently:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// returns immediately&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cacheMaybe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// runs SQL or uses cache&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bitset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are about 50 more lines for solving the algebra and 25 more for the basic caching, but these three snippets are a representative example of what the KIB code looks like.&lt;/p&gt;

&lt;p&gt;The snippets show some intermediate concepts: tree traversal, green threads, bitset operations and caching. While not that uncommon, what I‚Äôve rarely seen in practice is an implementation of all these things solving a real business problem within a day‚Äôs work. We don‚Äôt think we would have been able to pull this off in any other language. I‚Äôll explain why we think so in the conclusion.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;The results of our project were extremely gratifying.&lt;/p&gt;

&lt;p&gt;In financial terms, we saved $31.000 yearly in AWS bills and $4.000 yearly in after-hours support.
In-office support &amp;amp; maintenance probably costed more than the previous ones combined in the last year, but these are not easily quantifiable in dollar value.
Note that our InfiniDB-based solution has undergone yearly rewrites (we‚Äôve had to rewrite our InfiniDB solution in 2015 and again in 2016 since our original 2014 implementation).
By my calculation, we will save more than $50,000 this year and a similar amount every year going forward.&lt;/p&gt;

&lt;p&gt;In terms of speed, here‚Äôs a week-on-week table of results for 9 of our biggest customers (we‚Äôve replaced the actual names with their countries of origin):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/kib_results.png&quot; alt=&quot;Results&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For some customers, this upgrade meant not waiting for Group Builder anymore, as it was the case for this USA customer:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/kib_usa_customer_elapsed_times.png&quot; alt=&quot;Results&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Globally, it was an 81% average improvement in group run times; an average constructed from every single Group Builder group ran on those weeks, not from a sample. That really exceeded our own expectations.&lt;/p&gt;

&lt;p&gt;For us devs, replacing our complex custom replication implementation of InfiniDB that kept us up at night every other week with such a tiny and simple Go microservice we built on a Hackathon is the greatest gift.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Throughout the Hackathon, we spent the day researching, designing and coding, and no more than half an hour debugging. We didn‚Äôt have dependency issues. We didn‚Äôt have issues understanding each other‚Äôs code, because it looked exactly the same and just as simple. We fully understood the tools we were using, because we have been using the same bare bone building blocks for a year. We didn‚Äôt struggle with debugging, because the only bugs we had were silly mistakes that were either found early by the IDE‚Äôs linter or clearly explained by the compiler with error messages written for humans. All of this was possible thanks to the Go language.&lt;/p&gt;

&lt;p&gt;KIB is in production today on all major customers, and it‚Äôs barely using a few hundred MB of RAM per customer and sharing 4 vCPUs among all of them. Even though we aggressively parallelised SQL query execution and bitset operations, we had no issues at all related to this: no ‚Äútoo many connections‚Äù to MySQL, no bugs related to concurrency, etc; not even while writing it. We did have one pointer-related bug and one silly tree traversal edge case; we‚Äôre human.&lt;/p&gt;

&lt;p&gt;What‚Äôs the lesson learned here? My lesson learned is the power and value of simplicity. Even within the simplicity of Go, we went with the simplest (not the easiest) possible subset of it: we didn‚Äôt use channels, interfaces, panics, named returns, iotas, mutexes (we did have one WaitGroup for the one set of goroutines). We only used goroutines and pointers where necessary.&lt;/p&gt;

&lt;p&gt;Thanks for reading this blogpost. KISS!&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Apr 2018 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2018/04/02/we-saved-50ky-with-a-tiny-go-%C2%B5service-coded-in-a-hackathon/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2018/04/02/we-saved-50ky-with-a-tiny-go-%C2%B5service-coded-in-a-hackathon/</guid>
      </item>
    
      <item>
        <title>How we improved our workflow by piping sql</title>
        <description>&lt;p&gt;NOTE: my original blogpost was published &lt;a href=&quot;https://movio.co/en/blog/improving-with-sql-and-charts/&quot;&gt;in the Movio blog&lt;/a&gt;. I‚Äôve had to steal it because it went offline for a while, the link sometimes 404s, and they‚Äôve broken some links. I don‚Äôt want it to be lost. The following content is unchanged from the original.&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Since we began our transition &lt;a href=&quot;https://marianogappa.github.io/software/2017/01/25/making-the-move-from-scala-to-go-and-why-were-not-going-back&quot;&gt;from Scala to Go&lt;/a&gt;, we discovered that when there‚Äôs no right tool for the job, we can make a rough one ourselves in an hour or two. If it makes sense we can iterate on it until it becomes something the whole team can use, then the whole company, and then, sometimes, the whole world.&lt;/p&gt;

&lt;p&gt;In this blog post, I‚Äôd like to share two of these tools: &lt;a href=&quot;https://github.com/marianogappa/sql&quot;&gt;sql&lt;/a&gt; and &lt;a href=&quot;https://github.com/marianogappa/chart&quot;&gt;chart&lt;/a&gt;, that we‚Äôve been using a lot lately. Together, they compose an interesting pattern for tinkering with multiple databases individually or concurrently within the terminal.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The Movio Cinema SaaS platform has grown to manage the marketing campaigns of almost 60 of the biggest cinema chains worldwide in only a few years. This feat has not come without a few interesting challenges.&lt;/p&gt;

&lt;p&gt;In the early days, it was relatively easy to provide good quality support in a timely manner with few developer resources. Recently, it has become necessary to get creative in order to accommodate the volume of incoming support tickets, without sacrificing proactive support and the development of new and exciting projects.&lt;/p&gt;

&lt;p&gt;When presented with a support situation, sometimes outside office hours, it‚Äôs important to diagnose quickly. Given the nature of our issues, much of our support work takes place in the terminal, and our toolbox is based on &lt;a href=&quot;https://www.gnu.org/software/coreutils/coreutils.html&quot;&gt;Linux‚Äôs coreutils&lt;/a&gt;. Most of the time, we‚Äôre working with remote MySQL databases, Cassandra clusters, Kafka clusters and microservices deployed as Kubernetes pods onto several AWS data centers and availability zones.&lt;/p&gt;

&lt;p&gt;Almost everything that we do to maintain this infrastructure and resolve support issues can be achieved by a clever composition of coreutils, following the &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_philosophy&quot;&gt;UNIX philosophy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Over time, we‚Äôve incorporated several additional useful tools. Notable examples are &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;ag&lt;/a&gt; for fast grepping and &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; for parsing JSON.&lt;/p&gt;

&lt;h2 id=&quot;what-about-mysql&quot;&gt;What about MySQL?&lt;/h2&gt;

&lt;p&gt;When working with MySQL, however, for years we have lacked these sorts of practical ad-hoc interactions. Why was MySQL different?&lt;/p&gt;

&lt;p&gt;The MySQL client is not intended primarily for composability, given:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The database we‚Äôre interested in generally runs on a remote machine&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The MySQL client is interactive&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It outputs results in a format that makes it easy to read but hard to pipe&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here‚Äôs a query ran on a MariaDB client:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&amp;gt;&lt;/span&gt; SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SELECT 1, 2, 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; t&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---+---+---+
| 1 | 2 | 3 |
+---+---+---+
| 1 | 2 | 3 |
+---+---+---+
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can work around these impediments:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt; obviously allows us to connect to a remote database, provided you grant the (appropriate permissions)[https://dev.mysql.com/doc/refman/5.7/en/grant.html] to the user within the MySQL server and allow the remote incoming connection on the server‚Äôs firewall.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; remote.movio.co &lt;span class=&quot;nt&quot;&gt;-P3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; mariano &lt;span class=&quot;nt&quot;&gt;-pmypass&lt;/span&gt; db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;We can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-e&lt;/code&gt; flag to supply a query to the client. When this flag is supplied, the client is not interactive.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; remote.movio.co &lt;span class=&quot;nt&quot;&gt;-P3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; mariano &lt;span class=&quot;nt&quot;&gt;-pmypass&lt;/span&gt; db &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM (SELECT 1, 2, 3) t&quot;&lt;/span&gt;
+---+---+---+ 
| 1 | 2 | 3 | 
+---+---+---+ 
| 1 | 2 | 3 | 
+---+---+---+ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;To get an output we can use, we can add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-N&lt;/code&gt; (skip column names), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt; (silent, less output) and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-r&lt;/code&gt; (raw output, tabular format) flags.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; remote.movio.co &lt;span class=&quot;nt&quot;&gt;-P3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; mariano &lt;span class=&quot;nt&quot;&gt;-pmypass&lt;/span&gt; db &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-Nsre&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM (SELECT 1, 2, 3) t&quot;&lt;/span&gt;
1 2 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs much better. We can now, as an example, pipe the output to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tr&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bc&lt;/code&gt; to sum them up:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; remote.movio.co &lt;span class=&quot;nt&quot;&gt;-P3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; mariano &lt;span class=&quot;nt&quot;&gt;-pmypass&lt;/span&gt; db &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-Nsre&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM (SELECT 1, 2, 3) t&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+&quot;&lt;/span&gt; | bc
6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even though we can now apply the whole coreutils toolbox on the output of any query, there are still two important issues with this approach:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The previous line is way too long to be convenient for ad-hoc queries.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The production database password is all over the bash history file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can solve both issues with a bash function:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;m&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; remote.movio.co &lt;span class=&quot;nt&quot;&gt;-P3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; mariano &lt;span class=&quot;nt&quot;&gt;-pmypass&lt;/span&gt; db &lt;span class=&quot;nt&quot;&gt;-Nsre&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then we can just:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;m &lt;span class=&quot;s1&quot;&gt;&apos;SELECT * FROM (SELECT 1, 2, 3) t&apos;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+&quot;&lt;/span&gt; | bc
6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this idea only works for a specific database; if we want to query a different one, we need either another function or at least one argument.&lt;/p&gt;

&lt;h2 id=&quot;enter-sql&quot;&gt;Enter sql&lt;/h2&gt;

&lt;p&gt;Hoping to address all these issues, we built a simple Go CLI tool called &lt;a href=&quot;https://github.com/marianogappa/sql&quot;&gt;sql&lt;/a&gt;. At the time of this writing, it was basically a ~200 LoC main.go.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; reads from standard input until an EOF (it assumes the content is a MySQL query) and then sends the query to one or multiple databases, and outputs the results in a tabulated format.&lt;/p&gt;

&lt;p&gt;Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt;, the previous example becomes:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM (SELECT 1, 2, 3) t&quot;&lt;/span&gt; | sql remote | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;+&quot;&lt;/span&gt; | bc
6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; requires a configuration file with the database locations and credentials. The previous example assumes you have a configuration file that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;remote&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dbName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dbServer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;remote.movio.co&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mypass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mariano&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It can query multiple databases in parallel (using goroutines). To disambiguate output when multiple databases are queried (which doesn‚Äôt necessarily come sorted), the database name is added as the first column of each line.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sql remote1 remote2 &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT name FROM red_squad ORDER BY id DESC LIMIT 3&quot;&lt;/span&gt;
remote1    Lucian
remote2    Isaac
remote1    Gary
remote1    Mariano
remote2    Mikhail
remote2    Am
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql all&lt;/code&gt; to query all the databases in your configuration file.&lt;/p&gt;

&lt;p&gt;Additionally it supports the case where your local machine doesn‚Äôt have permission to connect remotely but you have ssh access to a server that does; in this case &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; will first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh&lt;/code&gt; to the server, and then connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_and_chart_diagram.jpg&quot; alt=&quot;sql diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; depends on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt; client and optionally &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh&lt;/code&gt;. When &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh&lt;/code&gt; is used, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt; client must be installed on the remote server.&lt;/p&gt;

&lt;h2 id=&quot;what-happened-next&quot;&gt;What happened next&lt;/h2&gt;

&lt;p&gt;While this shiny new tool made querying faster and more convenient in some cases (e.g. not needing to ssh to a remote host, not having to type hostnames and username/password), it also enabled some important new ones - like being able to compare or assert something across many or all of our databases.&lt;/p&gt;

&lt;p&gt;In doing so, we found that, sometimes, the result of a query, multitenanted or not, is not easy to interpret in plain text. Sometimes charts are better than data tables for humans.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs an example that we have come across&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At Movio, we send hundreds of millions of emails and SMS every month. Every once in a while, something goes wrong with some marketing campaign, and we need to figure out what is happening, fast.&lt;/p&gt;

&lt;p&gt;Say, for example, we receive an email through support about unusual deliverability results for a marketing campaign, for cinema exhibitor named ‚ÄúABC‚Äù.&lt;/p&gt;

&lt;p&gt;If the issue were a failure to execute a marketing campaign, or one being stuck while sending communications, we would immediately look for alerts on our campaigns infrastructure, and keep an eye on suspicious activity on our monitoring dashboards. In this case, however, the campaigns seem to be executing, but the results are not as expected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I‚Äôll propose a three-step process for this investigation:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The first thing to do here is scope the issue; is this happening to every client or just ABC?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After de-risking, we need some context. How are ABC‚Äôs campaigns performing? Is this situation really an anomaly?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, we can really delve into the root cause of the issue.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let‚Äôs say we have the following table (one of these for each of our customers, spread across dozens of database servers):&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Campaigns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;sentCount&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;utcSent&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TIMESTAMP&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An intuitive query to find the results for the campaigns sent in the last seven days would be:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sentCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utcSent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Campaigns&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utcSent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_SUB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UTC_TIMESTAMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course, doing this on every single database would take forever, so we can use sql instead:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT sentCount, utcSent FROM Campaigns
 WHERE utcSent &amp;gt; DATE_SUB(UTC_TIMESTAMP(), INTERVAL 7 DAY)&quot;&lt;/span&gt; | sql all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, the resulting dataset is relatively hard to read and interpret:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ABC  184063  2017-05-20 15:08:37
JKL  14161 2017-05-20 12:02:49
DEF  1510620 2017-05-20 11:02:59
DEF  16923 2017-05-17 17:58:23
ABC  63502 2017-05-17 17:57:09
MNO  245708  2017-05-17 17:48:57
GHI  16959 2017-05-17 17:32:21
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are ways around this at the expense of reduced information and extra complexity of the query, which can in turn come with unintended mistakes. A year ago this would have been a different trade-off, but Moving to Go has been a wide paradigm shift for us: now complexity weighs heavily in the equation, because &lt;a href=&quot;https://www.youtube.com/watch?v=PAAkCSZUG1c&amp;amp;t=14m35s&quot;&gt;clear is better than clever&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What we need for this is a scatter plot. Is there a simple way to get one from this output?&lt;/p&gt;

&lt;h2 id=&quot;enter-chart&quot;&gt;Enter chart&lt;/h2&gt;

&lt;p&gt;Linux has a world-class charting tool called &lt;a href=&quot;http://www.gnuplot.info/&quot;&gt;gnuplot&lt;/a&gt;. It‚Äôs super powerful and covers all chart types and features exhaustively, but it‚Äôs also slightly inconvenient for quick ad-hoc charting. It‚Äôs &lt;a href=&quot;http://www.gnuplot.info/docs_4.0/gpcard.pdf&quot;&gt;a little hard to learn&lt;/a&gt;. I must admit, I haven‚Äôt given it a fair shot as I find it too complex.&lt;/p&gt;

&lt;p&gt;Instead, we built a very simple charting tool called &lt;a href=&quot;https://github.com/marianogappa/chart&quot;&gt;chart&lt;/a&gt;. It reads data from standard input (e.g. the output from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt;), figures out the format and opens a browser tab with a chart of the data. For the actual charting it uses &lt;a href=&quot;http://www.chartjs.org/&quot;&gt;Chart.js&lt;/a&gt;, which is the simplest, most lightweight decent charting library we could find.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; has only a very limited set of smarts and modifiers. The key is to keep it simple and only implement what we use.&lt;/p&gt;

&lt;p&gt;For step one (de-risking), we need a scatter plot of send counts from the last week of every customer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;X-axis should be the date&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Y-axis should be the send count&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Different customers should be identified by colour&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some customers send a lot more communications than others, so we need a logarithmic scale on the Y-axis to see useful output&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All this is remarkably simple to do in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT sentCount, utcSent FROM Campaigns&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;s2&quot;&gt;&quot;WHERE utcSent &amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;s2&quot;&gt;&quot;DATE_SUB(UTC_TIMESTAMP(), INTERVAL 7 DAY)&quot;&lt;/span&gt; | sql all | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 chart scatter log mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt; argument is an alias of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--date-format &quot;2006-01-02 15:04:05&quot;&lt;/code&gt;, and was added because it‚Äôs a very common occurrence)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_and_chart_send_campaigns_scatter.png&quot; alt=&quot;Email campaign send scatter plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre not seeing a sudden drop in send counts across the board, so it‚Äôs safe to go to step two: getting some context for this particular customer.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;SELECT sentCount, utcSent FROM Campaigns WHERE &apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&apos;utcSent &amp;gt; DATE_SUB(UTC_TIMESTAMP(), INTERVAL 2 MONTH) ORDER BY &apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&apos;utcSent DESC&apos;&lt;/span&gt; | sql abc | chart line mysql &lt;span class=&quot;nt&quot;&gt;--zero-based&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_and_chart_line_chart.png&quot; alt=&quot;Line chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clearly, something is going on with this particular campaign near the end of the curve. In this case, we can resort to a structured log file where we list send failures. The file looks like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utcInserted&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;May 17 17:47:17&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;reason&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;hard_bounce&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;campaignId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;3055&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;MNO&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utcInserted&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;May 17 17:47:34&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;reason&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;soft_bounce&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;campaignId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;123&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;ABC&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utcInserted&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;May 17 17:48:02&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;reason&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;feedback&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;campaignId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;58373&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;DEF&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utcInserted&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;May 17 17:48:02&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;reason&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;hard_bounce&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;campaignId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;123&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;ABC&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With a little &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt; magic we can filter out the logs we‚Äôre not interested in, and just output the reason for each failure:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;select(.customer == &quot;ABC&quot; and .campaignId == &quot;123&quot;)` \
`| .reason&apos;&lt;/span&gt; /var/log/failures.log
soft_bounce
hard_bounce
hard_bounce
network_timeout
soft_bounce
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Identifier frequency is also a very common use case, so when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; receives a list of strings it assumes you want a pie chart with each distinct string as a category and its frequency as a slice of the total.&lt;/p&gt;

&lt;p&gt;We can just pipe that output to chart:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;select(.customer == &quot;ABC&quot; and .campaignId == &quot;123&quot;)` \
`| .reason&apos;&lt;/span&gt; /var/log/failures.log | chart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/sql_and_chart_pie_chart.png&quot; alt=&quot;Pie chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hard bounces seem to dominate the failure reasons. Network timeouts tend to have a more systemic effect, so this result is not unexpected. Possible explanations are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;One or more of our mailservers has been blacklisted&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The campaign was addressed to a poorly managed address list&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The email content has triggered third party spam checkers&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is still some work to do, but we‚Äôve made a pretty comprehensive initial diagnosis and have ruled out bigger potential threats in just a couple of lines on the terminal.&lt;/p&gt;

&lt;p&gt;Some of the advantages of this workflow include:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Being able to query all databases at once made it possible to rule out a more serious issue. Otherwise we may have checked only the particular customer‚Äôs database and overlooked the root cause.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We touched on the surface of what this allows. Think of the wealth of tools in coreutils, and what the different chart types can reveal. Pie and bar charts can be summarized quite well on simple tables; but line charts and scatter plots can show complex correlations that are invisible on matrices for humans.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;gotchas&quot;&gt;Gotchas&lt;/h2&gt;

&lt;p&gt;If you plan to try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; for your workflow, you should probably read this section first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read-only is best&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; should be used with care; especially against multiple databases. Everyone makes mistakes, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; allows you to multiply your destructive power! If you don‚Äôt have it already, create a database username with read-only permissions, and use this one with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Even read-only can be dangerous&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember that MyISAM tables will perform a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/internal-locking.html#internal-table-level-locking&quot;&gt;table-level lock on reads&lt;/a&gt;. Even on InnoDB, please don‚Äôt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT * FROM users&lt;/code&gt; on your entire set of databases!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Timing queries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; doesn‚Äôt output query running time like the MySQL client does. However, you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time&lt;/code&gt; coreutils tool like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;sql test_db &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT COUNT(*) FROM users&quot;&lt;/span&gt;
real    0m6.624s
user    0m0.020s
sys     0m0.034s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that these figures include the whole time spent by the sql process, including outputting to stdout, which the MySQL client doesn‚Äôt include.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Watching SHOW PROCESSLIST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to double-check that a query is running on some database server, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; gives you an easy way to inspect queries running for that schema:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;watch &lt;span class=&quot;s2&quot;&gt;&quot;echo &apos;show processlist&apos; | sql my_db&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which you can further grep to wait for your specific query:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;watch &lt;span class=&quot;s2&quot;&gt;&quot;echo &apos;show processlist&apos; | sql my_db | grep &apos;FROM my_table&apos;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Learning chart should be very easy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; encourages you to learn on demand and by example.&lt;/p&gt;

&lt;p&gt;There are 3 simple ways to learn how to use it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Look at the &lt;a href=&quot;https://marianogappa.github.io/chart/&quot;&gt;cheatsheet&lt;/a&gt;. This shows example data, commands ran and resulting chart for common use cases.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try it! Pipe your data to chart and try the few available options.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Distrust it. Add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option to check how &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; interpreted your input. You‚Äôll get an intuition for how it works.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The cheat sheet is produced by a Go test file and it‚Äôs updated on every automated release, so there‚Äôs no way it can get outdated. It‚Äôs a pretty solid piece of documentation!&lt;/p&gt;

&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h2&gt;

&lt;p&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt;, we‚Äôve found a convenient pattern for quickly diagnosing our support issues. If your work revolves around databases, I think it might be useful for you. Data Scientists might draw a parallel to using &lt;a href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt; on Jupyter Notebooks.&lt;/p&gt;

&lt;p&gt;Currently, only MySQL is supported. It looks like adding support for PostgreSQL, for example, would be a two hour job. However, I‚Äôm not planning on it as we wouldn‚Äôt be able to test it on a daily basis, like we do with MySQL now. But you can! &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; are &lt;a href=&quot;https://github.com/marianogappa/sql#contribute&quot;&gt;open&lt;/a&gt; for &lt;a href=&quot;https://github.com/marianogappa/chart#contribute&quot;&gt;contributions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the same vein, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; will probably not support complex use cases. In those cases, you‚Äôre better off with gnuplot, Excel or Google Sheets; use the right tool for the job.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sql&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chart&lt;/code&gt; are free and open source. We hope you find them useful! If you can, please help us to keep them simple and useful as time goes on and we face new interesting challenges. Thank you for reading this blogpost. KISS!&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Jun 2017 00:00:00 +0100</pubDate>
        <link>https://marianogappa.github.io/software/2017/06/28/how-we-improved-our-workflow-by-piping-sql/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2017/06/28/how-we-improved-our-workflow-by-piping-sql/</guid>
      </item>
    
      <item>
        <title>ostinato: a chess engine written in Scala that runs in the Browser, Docker and the REPL</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;In this blogpost, I introduce the ostinato project: a Chess engine written in Scala.&lt;/p&gt;

&lt;p&gt;It‚Äôs not the fastest engine around, nor the hardest AI to beat. However, it enables some use cases that I haven‚Äôt found good free online sources for, like parsing notations into matches, converting between notations, playing against the AI from a given step in a parsed match, as well as the ability to solve chess puzzles and problems via elegant one-liners on the Scala REPL.&lt;/p&gt;

&lt;p&gt;By &lt;a href=&quot;https://www.scala-js.org/doc/project/cross-build.html&quot;&gt;cross-compiling&lt;/a&gt; into JS using &lt;a href=&quot;https://www.scala-js.org/&quot;&gt;ScalaJS&lt;/a&gt;, the same Scala code can run in the browser as a JavaScript library, which is great for two reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;the tools can be available online for free with Github service quality&lt;/li&gt;
  &lt;li&gt;JS devs can use the library without any Scala knowledge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is an &lt;a href=&quot;https://hub.docker.com/r/marianogappa/ostinato/&quot;&gt;ostinato Docker image&lt;/a&gt; available on Docker Hub (or it can be built locally) which exposes the same API as the JS library via an &lt;a href=&quot;http://doc.akka.io/docs/akka-http/current/scala.html&quot;&gt;Akka HTTP&lt;/a&gt; server.&lt;/p&gt;

&lt;p&gt;Because ostinato is 100% &lt;a href=&quot;https://en.wikipedia.org/wiki/Stateless_protocol&quot;&gt;stateless&lt;/a&gt;, it‚Äôs a perfect candidate for &lt;a href=&quot;https://kubernetes.io/docs/user-guide/deployments/#what-is-a-deployment&quot;&gt;Kubernetes deployments&lt;/a&gt;: each individual API request (e.g. an AI move) can be load balanced over a set of pods, and pod count can be &lt;a href=&quot;https://kubernetes.io/docs/user-guide/horizontal-pod-autoscaling/&quot;&gt;auto-scaled&lt;/a&gt; based on CPU load average. This makes it attractive for AI research and as a backend for chess sites.&lt;/p&gt;

&lt;h2 id=&quot;project-links&quot;&gt;Project links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marianogappa/ostinato&quot;&gt;Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marianogappa.github.io/ostinato/docs/&quot;&gt;Scaladoc&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;demos&quot;&gt;Demos&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/play&quot;&gt;Chess Game&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Play a Chess Match against the AI.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/parser&quot;&gt;Game Parser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tool to paste any chess match in any known notation and browse through the moves via Chessboard. Also play from any board state against the AI, or convert to any other notation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marianogappa.github.io/ostinato-examples/convert&quot;&gt;Notation Converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Convert any pasted chess match between the following notations: PGN, Algebraic, Figurine, Coordinate, Descriptive, ICCF, Smith and FEN (with variations).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/autoplay&quot;&gt;Auto-play&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Two AI‚Äôs playing each other (making random moves).&lt;/p&gt;

&lt;h2 id=&quot;meta&quot;&gt;Meta&lt;/h2&gt;

&lt;p&gt;I‚Äôve recently upset some good people of the Scala community with &lt;a href=&quot;https://movio.co/blog/migrate-Scala-to-Go/&quot;&gt;this blogpost&lt;/a&gt; that &lt;a href=&quot;https://news.ycombinator.com/item?id=13476988&quot;&gt;became a language war&lt;/a&gt;. Partly, for me, working on this blogpost means showing some of the nice use-cases Scala enables, in particular one that Golang can‚Äôt do: solving complex domain-specific problems with elegant one-liners. Hopefully we can focus on the engineering this time. Sorry that I didn‚Äôt foresee or do more to prevent this on the previous blogpost.&lt;/p&gt;

&lt;h2 id=&quot;solving-puzzles-in-the-repl&quot;&gt;Solving puzzles in the REPL&lt;/h2&gt;

&lt;p&gt;A quite unique feature of ostinato is that it leverages the Scala differentials in terms of succintness and elegance for actually solving problems. As a result, it becomes feasible to solve chess brain teasers directly in the REPL with only a few one-liners.&lt;/p&gt;

&lt;p&gt;Let‚Äôs try a checkmate in two moves. Here‚Äôs an &lt;a href=&quot;http://chesspuzzlesonline.com/solution/ps44/&quot;&gt;example puzzle&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ostinato-mate-in-two.png&quot; alt=&quot;Example: mate in two moves&quot; /&gt;&lt;/p&gt;

&lt;p&gt;White moves first and it should make checkmate in the second move.&lt;/p&gt;

&lt;h3 id=&quot;lets-solve-it&quot;&gt;Let‚Äôs solve it!&lt;/h3&gt;

&lt;p&gt;First, we need to compile the jar so we can play with it in the REPL. This should be easy:
(alternatively, just download the latest jar from &lt;a href=&quot;https://github.com/marianogappa/ostinato/releases&quot;&gt;Releases&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sbt pack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We should be able to start a REPL with the ostinato jar in the classpath (the exact path could change over time so just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; the folder and find the ostinato_2.12-*.jar):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scala &lt;span class=&quot;nt&quot;&gt;-cp&lt;/span&gt; target/pack/lib/ostinato_2.12-1.0.2.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Import the core, so we can use the chess classes:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ostinato.chess.core._&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ostinato.chess.core._&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OK. Let‚Äôs generate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessBoard&lt;/code&gt; identical to the one in the puzzle:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ChessGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;fromGridString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;........
     |....‚ôï...
     |.‚ôü..‚ôü.‚ôü‚ôö
     |‚ôü.....‚ôò‚ôõ
     |...‚ôô‚ôü...
     |.‚ôô....‚ôô.
     |‚ôô....‚ôô‚ôî.
     |........&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;stripMargin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WhiteChessPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;board&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ostinato.chess.core.ChessBoard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;....‚ôï...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôü..‚ôü.‚ôü‚ôö&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôü.....‚ôò‚ôõ&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...‚ôô‚ôü...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôô....‚ôô.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôô....‚ôô‚ôî.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessGame.from...&lt;/code&gt; &lt;a href=&quot;https://marianogappa.github.io/ostinato/docs/ostinato/chess/core/ChessGame$.html#fromGridString&quot;&gt;methods&lt;/a&gt; return a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Try[ChessGame]&lt;/code&gt;, because parsing could fail. In this case, I know it‚Äôll work so I just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.get&lt;/code&gt;, and get the board from it.&lt;/p&gt;

&lt;p&gt;Note that the Unicode symbols were made with the assumption of black foreground and white background. In the REPL, this is often times backwards. This might confuse you as to which colour is which. Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Chess_symbols_in_Unicode&quot;&gt;this&lt;/a&gt; as a safe copy-paste.&lt;/p&gt;

&lt;p&gt;We‚Äôre gonna need to ask ostinato to be optimistic. If we calculate all actions on this board, ostinato will include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;White resigns&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;White claims draw&lt;/code&gt;, which we‚Äôre not interested in. Same will apply for the next moves. Let‚Äôs create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessOptimisations&lt;/code&gt; instance and pass it around:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ChessOptimisations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;beOptimistic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here‚Äôs the meaty part. We need to express the following statement in code:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúFind the actions such that for whichever following action, there‚Äôs at least one follow-up checkmate‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If the puzzle was constructed properly, there should be only one action that satisfies those conditions:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAllActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAllActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;forall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAllActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;isLossFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;BlackChessPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;scala.collection.immutable.Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ostinato.chess.core.ChessBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(.....‚ôï..&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôü..‚ôü.‚ôü‚ôö&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôü.....‚ôò‚ôõ&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...‚ôô‚ôü...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôô....‚ôô.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôô....‚ôô‚ôî.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes! There‚Äôs exactly one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessBoard&lt;/code&gt; in the resulting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Let‚Äôs extract the action so we can apply it to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessBoard&lt;/code&gt;. That can be accomplished by appending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.head.history.head.action.get&lt;/code&gt; to our previous line (i.e. getting the first action in the history).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessAction&lt;/code&gt; has a nice &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toString&lt;/code&gt; implementation.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;get&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ostinato.chess.core.ChessAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;White&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&apos;s&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Queen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let‚Äôs apply the action on the board. Not all actions can be applied on a board, so &lt;a href=&quot;https://marianogappa.github.io/ostinato/docs/ostinato/core/Board.html#doAction&quot;&gt;doAction&lt;/a&gt; returns an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Option[ChessBoard]&lt;/code&gt;. For brevity we‚Äôll just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.get&lt;/code&gt; it here:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;get&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ostinato.chess.core.ChessBoard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.....‚ôï..&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôü..‚ôü.‚ôü‚ôö&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôü.....‚ôò‚ôõ&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...‚ôô‚ôü...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.‚ôô....‚ôô.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;‚ôô....‚ôô‚ôî.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lastly, let‚Äôs see the full action history.&lt;/p&gt;

&lt;p&gt;We‚Äôll have to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pick any black action (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; in this case)&lt;/li&gt;
  &lt;li&gt;filter the white checkmate action&lt;/li&gt;
  &lt;li&gt;retrieve the action history&lt;/li&gt;
  &lt;li&gt;history is stored backwards so we‚Äôll have to reverse it to read it properly&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAllActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;doAllActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;isLossFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;BlackChessPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;reverse&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res5&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ostinato.chess.core.ChessAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;White&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&apos;s&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Queen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;nc&quot;&gt;Black&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&apos;s&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;King&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;captures&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;White&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&apos;s&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Knight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;nc&quot;&gt;White&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&apos;s&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Queen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f4&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit! Do compare with the puzzle site, but the solutions match.&lt;/p&gt;

&lt;p&gt;Within the REPL, ostinato becomes a swiss-army knife for chess-related queries.&lt;/p&gt;

&lt;h3 id=&quot;taking-the-red-pill&quot;&gt;Taking the &lt;a href=&quot;https://en.wikipedia.org/wiki/Red_pill_and_blue_pill&quot;&gt;red pill&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;If you‚Äôre gonna be playing around with advanced cases in the REPL, you‚Äôll probably need some time to get used to the code (you should know Scala; no chance otherwise). These examples, the &lt;a href=&quot;https://marianogappa.github.io/ostinato/docs/&quot;&gt;Scaladoc&lt;/a&gt; and the &lt;a href=&quot;https://github.com/marianogappa/ostinato/tree/master/shared/src/test/scala/ostinato&quot;&gt;hundreds of tests&lt;/a&gt; are good starting points, but I‚Äôd be happy to help you on my spare time so let me know; my details are at the top of the page and/or post a comment below. There‚Äôs a very reduced set of &lt;a href=&quot;https://github.com/marianogappa/ostinato/blob/d653c83fa79d33a3ab2238f42f6bef474f0ff490/shared/src/main/scala/ostinato/chess/core/Notation.scala#L61&quot;&gt;voodoo code&lt;/a&gt; overall, and I‚Äôm not proud of it (anymore, that is).&lt;/p&gt;

&lt;h2 id=&quot;in-the-browser-ostinatojs&quot;&gt;In the browser: ostinato.js&lt;/h2&gt;

&lt;p&gt;Although ~97% of the ostinato codebase is written in Scala, it leverages ScalaJS as a facade to enable JS use cases. By cross-compiling the code, ScalaJS produces an &lt;a href=&quot;https://github.com/marianogappa/ostinato/releases&quot;&gt;ostinato.js file&lt;/a&gt;. This strategy makes all the free tools feasible.&lt;/p&gt;

&lt;p&gt;Most of the demos also leverage the popular and solid &lt;a href=&quot;http://chessboardjs.com/&quot;&gt;ChessboardJS&lt;/a&gt; library for UI. Because ChessboardJS‚Äô notation conventions make a lot of sense, ostinato‚Äôs API was exposed in a way that is compatible with it.&lt;/p&gt;

&lt;p&gt;The best part of JS support is that JS developers can use the chess engine without any Scala knowledge.&lt;/p&gt;

&lt;p&gt;Just download the latest js file in the &lt;a href=&quot;https://github.com/marianogappa/ostinato/releases&quot;&gt;releases section&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using ostinato.js is really simple and easy. For a great working intro, check the &lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/autoplay&quot;&gt;auto-play demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here‚Äôs the meaty part. You‚Äôll have to pardon my js, but I think it should be quite clear:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boardUi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialBoard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialBoard&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;aiMove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ostinato&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomAiMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aiMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aiMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isCheckMate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;aiMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialBoard&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aiMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;boardUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;boardUi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ChessBoard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;moveSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fast&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;boardUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only ostinato line in there is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ostinato.chess.js.Js().randomAiMove(board)&lt;/code&gt;. The rest is ChessboardJS and plain JavaScript.&lt;/p&gt;

&lt;p&gt;Here‚Äôs what‚Äôs available at the moment from JavaScript: &lt;a href=&quot;https://github.com/marianogappa/ostinato/blob/master/js/src/main/scala/ostinato/chess/js/Js.scala&quot;&gt;Js.scala&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here, you should be able to go to the other examples. If you‚Äôre interested in developing an advanced use case, I‚Äôd be happy to help you on my spare time. Find my contact details at the top of this page and/or post a comment below.&lt;/p&gt;

&lt;h2 id=&quot;server-side&quot;&gt;Server-side&lt;/h2&gt;

&lt;p&gt;Running ostinato on the JVM has several pros:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It runs faster than its ScalaJS counterpart&lt;/li&gt;
  &lt;li&gt;Because ostinato is 100% stateless, one server can play several games at a time&lt;/li&gt;
  &lt;li&gt;No high CPU usage on the client; responsiveness is up to the server&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;via-sbt&quot;&gt;Via sbt&lt;/h2&gt;

&lt;p&gt;Try starting the server via sbt:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sbt ostinatoJVM/run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can check if it‚Äôs working by trying the healthcheck:&lt;/p&gt;

&lt;p&gt;(which could be used as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;livenessProbe&lt;/code&gt; on a Kubernetes deployment)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl localhost:51234/healthcheck
OK!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or get an initial board to start playing from:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl localhost:51234/initialBoard
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;board&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then make the computer play from it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl localhost:51234/randomAiMove &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&apos;{&quot;board&quot;:&quot;rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1&quot;}&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;success&quot;&lt;/span&gt;:true,
  &lt;span class=&quot;s2&quot;&gt;&quot;isCheck&quot;&lt;/span&gt;:false,
  &lt;span class=&quot;s2&quot;&gt;&quot;isDraw&quot;&lt;/span&gt;:false,
  &lt;span class=&quot;s2&quot;&gt;&quot;board&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R b KQkq - 1 1 7163&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;isCheckmate&quot;&lt;/span&gt;:false,
  &lt;span class=&quot;s2&quot;&gt;&quot;action&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Nf3&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lets-try-something-more-fun&quot;&gt;Let‚Äôs try something more fun&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chesspuzzles.com/mate-in-one&quot;&gt;This site&lt;/a&gt; provides ‚Äúmate in one move‚Äù puzzles. Here‚Äôs one example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://marianogappa.github.io/images/ostinato-mate-in-one.png&quot; alt=&quot;Chess Puzzles: Mate in one&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ostinato server expects the input boards in ‚Äúostinato notation‚Äù, which is simply &lt;a href=&quot;https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation&quot;&gt;FEN notation&lt;/a&gt; plus (optionally) the history in &lt;a href=&quot;https://en.wikipedia.org/wiki/ICCF_numeric_notation&quot;&gt;ICCF notation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I‚Äôm too lazy to translate a board to FEN manually, so I looked around (for way longer that it would have taken me to just do it manually -.-) and I found &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.fimetech.chessfimee&amp;amp;rdid=com.fimetech.chessfimee&amp;amp;pli=1&quot;&gt;this Android app&lt;/a&gt; that OCRs the board and producess the FEN, which was:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;r1b1qb1r/1p1n2pp/p2P4/4N2k/7n/1Q4P1/PP2NP1P/R1B2RK1 w - - 0 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I would expect the basic AI to want to win as soon as possible, so let‚Äôs see if it finds the checkmate:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl localhost:51234/basicAiMove &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&apos;{&quot;board&quot;:&quot;r1b1qb1r/1p1n2pp/p2P4/4N2k/7n/1Q4P1/PP2NP1P/R1B2RK1 w - - 0 1&quot;}&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type:application/json&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;success&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;isCheck&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;isDraw&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;board&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;r1b1qb1r/1p1n2pp/p2P4/4N2k/6Pn/1Q6/PP2NP1P/R1B2RK1 b - - 0 1 7374&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;isCheckmate&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;action&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;g4+&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Luckily, the AI didn‚Äôt disappoint me :). It recommended advancing the pawn on the g file (above the white king), and it seems adamant that it‚Äôs a checkmate.&lt;/p&gt;

&lt;p&gt;From a geeky perspective, I find it useful to have this decoupled mini-tool at my disposal.&lt;/p&gt;

&lt;p&gt;Also, I recently switched the JSON engine to &lt;a href=&quot;https://github.com/spray/spray-json&quot;&gt;spray-json&lt;/a&gt; which patiently reminded me of the JSON object names and types I was supposed to provide to the API call until I got them right. Props to &lt;a href=&quot;https://github.com/sirthias&quot;&gt;Mathias&lt;/a&gt;. If somebody could please ask him how can I unmarshal the request‚Äôs JSON payload when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt; is not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application/json&lt;/code&gt;, I‚Äôd really appreciate it. I‚Äôve asked around on Gitter and SO and couldn‚Äôt get a good solution.&lt;/p&gt;

&lt;h2 id=&quot;playing-a-demo-game-using-the-jvm-as-back-end&quot;&gt;Playing a demo game using the JVM as back-end&lt;/h2&gt;

&lt;p&gt;Simply use the provided &lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/play&quot;&gt;demo chess game&lt;/a&gt; and add the following query parameters:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;useServer=localhost:51234 // location of your ostinato back-end
depth=1 // complexity of the AI (from 0, but 3 is already slow)
debug=1 // optional: logs AI rationale to STDOUT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;e.g. &lt;a href=&quot;https://marianogappa.github.io/ostinato-examples/play?useServer=localhost:51234&amp;amp;depth=1&quot;&gt;https://marianogappa.github.io/ostinato-examples/play?useServer=localhost:51234&amp;amp;depth=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôm not a particularly good chess player, but depth 3 beats me. &lt;a href=&quot;https://twitter.com/MarianoGappa/status/716530501075337216&quot;&gt;I was so happy&lt;/a&gt; when I reached that milestone &amp;lt;3&lt;/p&gt;

&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;

&lt;p&gt;You can start an ostinato container right from Docker Hub with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 51234:51234 marianogappa/ostinato:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once it‚Äôs up, you can try the healthcheck and other examples described above. Note that Docker may not open the port on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost&lt;/code&gt;; this depends on your Docker installation.&lt;/p&gt;

&lt;p&gt;If you want to experiment with the code and build the image locally (for which you will need sbt &amp;amp; Docker), you can use the provided script on the root folder:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./docker-build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script will kindly ask you to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sbt packArchiveZip&lt;/code&gt; if you haven‚Äôt done so, or if the last produced artifact was last modified half and hour ago or more.&lt;/p&gt;

&lt;p&gt;The script always builds the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ostinato&lt;/code&gt; image with the tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;latest&lt;/code&gt;. If you want to specify a custom tag, you can do it like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;v1.2.3 ./docker-build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h2&gt;

&lt;p&gt;As previously mentioned, ostinato is 100% stateless. The server doesn‚Äôt save any state from previous requests, and all the information necessary to respond to a request is present in the request itself.&lt;/p&gt;

&lt;p&gt;This means that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Any given ostinato server can satisfy requests from multiple games&lt;/li&gt;
  &lt;li&gt;A game can be played by issuing requests to multiple ostinato servers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, load balancing strategies become very simple with ostinato. Some popular solutions right now are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://serverless.com/&quot;&gt;Serverless&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/user-guide/deployments/#what-is-a-deployment&quot;&gt;Kubernetes Deployments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/elasticloadbalancing/&quot;&gt;AWS ELB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At least with Kubernetes, there‚Äôs also the possibility of dynamically increasing the number of ostinato container replicas when the CPU usage exceeds a given threshold; this is called &lt;a href=&quot;https://kubernetes.io/docs/user-guide/horizontal-pod-autoscaling&quot;&gt;auto-scaling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ostinato doesn‚Äôt use any disk and doesn‚Äôt have any special configurations so you don‚Äôt need to mount anything. As a JVM application, though, it‚Äôs not the cheapest in terms of CPU, memory, and image size. It‚Äôs using the smallest base image I could find that has a JVM: the &lt;a href=&quot;https://hub.docker.com/r/anapsix/alpine-java/&quot;&gt;alpine-java&lt;/a&gt; one.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a deployment manifest to get you started:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato:latest&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;IfNotPresent&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;500m&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;128Mi&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;4000m&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512Mi&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;livenessProbe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;httpGet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/healthcheck&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51234&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;external&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TCP&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51234&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The rationale behind low requests and high limits is that ostinato aggresively parallelises requests but they arrive infrequently, so bursts of usage can be multiplexed on the same Kubernetes minion. Mileage may vary; greater depths are memory hungry.&lt;/p&gt;

&lt;p&gt;You‚Äôll need a service to expose the server to your client code. Here‚Äôs a service manifest:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ostinato&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;external&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51234&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;targetPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51234&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apply both manifests with &lt;a href=&quot;https://kubernetes.io/docs/user-guide/kubectl-overview/&quot;&gt;kubectl&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ostinato-deployment.yml
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ostinato-service.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Your ostinato instances should be reachable via the Kubernetes proxy API, e.g.:&lt;/p&gt;

&lt;p&gt;https://kubernetes_domain_name/api/v1/proxy/services/ostinato:51234/healthcheck&lt;/p&gt;

&lt;p&gt;Follow the auto-scaling guidelines for dynamic scaling. Here‚Äôs a quick trick:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kubectl autoscale deployment ostinato --min=2 --max=5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;developing-ostinato-and-final-thoughts&quot;&gt;Developing ostinato and final thoughts&lt;/h2&gt;

&lt;p&gt;Developing ostinato was an amazing experience. I got to learn a lot about chess, a lot about Scala, a lot about OSS and a lot about software engineering.&lt;/p&gt;

&lt;p&gt;I believe ostinato has enabled some free and open source chess-related use cases that were unavailable before; if you find them useful I‚Äôd be very happy to &lt;a href=&quot;https://twitter.com/MarianoGappa&quot;&gt;hear about it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One thing I wanted to learn was how much I was profiting from OOP (after reading Lawrence Krubner‚Äôs famous &lt;a href=&quot;http://www.smashcompany.com/technology/object-oriented-programming-is-an-expensive-disaster-which-must-end&quot;&gt;OOP blogpost&lt;/a&gt;). Seeing chess as a poster child for OOP, I started the library as a ‚Äúturn-based game library‚Äù rather than just a ‚Äúchess library‚Äù, where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessGame&lt;/code&gt; extended &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Game&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChessAction&lt;/code&gt; extended &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Action&lt;/code&gt; and so on. The resulting code &lt;a href=&quot;https://github.com/marianogappa/ostinato/blob/d653c83fa79d33a3ab2238f42f6bef474f0ff490/shared/src/main/scala/ostinato/core/Game.scala&quot;&gt;scares me still&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another thing I‚Äôve learnt is that OOP and immutable design meet the hardware in a blurring mist, and while the succintness and elegance can aid in real-life problem solving, they also hide big O complexity greatly. At some inflection point, the indirection trade-off is not worth it. While not proud about it, I must link you to some &lt;a href=&quot;https://github.com/marianogappa/ostinato/blob/d653c83fa79d33a3ab2238f42f6bef474f0ff490/shared/src/main/scala/ostinato/chess/core/package.scala#L199&quot;&gt;compromises I‚Äôve made&lt;/a&gt; to gain acceptable response times.&lt;/p&gt;

&lt;p&gt;During extensive refactorings, I‚Äôve learnt to love IntelliJ‚Äôs renaming features. If just for that, and with its shortcomings, I think IntelliJ has raised the bar in that respect. I‚Äôve found it as convenient as Sublime Text‚Äôs multiple cursors.&lt;/p&gt;

&lt;p&gt;I‚Äôve learnt to beware of implicits. While they enable important use cases, they are used way more than they should be. I wasn‚Äôt able to completely get rid of them in the ostinato codebase (partly because I was bound by the superclass‚Äô method signatures; thanks OOP), but overall I believe I‚Äôve tamed the beast and learnt a valuable lesson.&lt;/p&gt;

&lt;p&gt;Big thank you to &lt;a href=&quot;https://ar.linkedin.com/in/mar%C3%ADa-cecilia-fladung-707b68b4&quot;&gt;Cecilia Fladung&lt;/a&gt; for designing the logo, and to the elite reviewers: &lt;a href=&quot;https://twitter.com/echojc&quot;&gt;@echojc&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/therealplato&quot;&gt;@therealplato&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/chris_d_barrett&quot;&gt;@chris_d_barret&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you for reading this blogpost. KISS!&lt;/p&gt;

&lt;style type=&quot;text/css&quot;&gt;
@font-face {
  font-family: &apos;DejaVuSansMono&apos;;
  src: url(&apos;/images/DejaVuSansMono.ttf&apos;);
}
code {
  font-family: DejaVuSansMono;
}
&lt;/style&gt;

</description>
        <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
        <link>https://marianogappa.github.io/software/2017/03/24/ostinato-a-chess-engine-written-in-scala-that-runs-on-the-browser-docker-and-the-repl/</link>
        <guid isPermaLink="true">https://marianogappa.github.io/software/2017/03/24/ostinato-a-chess-engine-written-in-scala-that-runs-on-the-browser-docker-and-the-repl/</guid>
      </item>
    
  </channel>
</rss>
